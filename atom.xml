<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>某飞行员的随笔</title>
  
  
  <link href="https://github.com/peitianyu/blog.git/atom.xml" rel="self"/>
  
  <link href="https://github.com/peitianyu/blog.git/"/>
  <updated>2021-10-24T14:03:43.286Z</updated>
  <id>https://github.com/peitianyu/blog.git/</id>
  
  <author>
    <name>某飞行员</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cpp学习</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/24/cpp%E5%AD%A6%E4%B9%A01/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/24/cpp%E5%AD%A6%E4%B9%A01/</id>
    <published>2021-10-24T04:30:12.000Z</published>
    <updated>2021-10-24T14:03:43.286Z</updated>
    
    <content type="html"><![CDATA[<h3 id="wsl安装"><a href="#wsl安装" class="headerlink" title="wsl安装"></a>wsl安装</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;wsl安装&quot;&gt;&lt;a href=&quot;#wsl安装&quot; class=&quot;headerlink&quot; title=&quot;wsl安装&quot;&gt;&lt;/a&gt;wsl安装&lt;/h3&gt;</summary>
      
    
    
    
    <category term="cpp" scheme="https://github.com/peitianyu/blog.git/categories/cpp/"/>
    
    
    <category term="cpp" scheme="https://github.com/peitianyu/blog.git/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/git/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/git/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:52:22.967Z</updated>
    
    <content type="html"><![CDATA[<h3 id="推送新创建git"><a href="#推送新创建git" class="headerlink" title="推送新创建git"></a>推送新创建git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入本地文件夹</span></span><br><span class="line">cd tool</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加需要上传文件</span></span><br><span class="line">echo &quot;# tool&quot; &gt;&gt; README.md</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化git</span></span><br><span class="line">git init</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加需要上传文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> git add -A 上传全部</span></span><br><span class="line">git add README.md</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注释</span></span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加分支</span></span><br><span class="line">git branch -M main</span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加默认远程库</span></span><br><span class="line">git remote add origin git@github.com:peitianyu/tool.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 推送</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h3 id="推送已存在的库"><a href="#推送已存在的库" class="headerlink" title="推送已存在的库"></a>推送已存在的库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:peitianyu/tool.git</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h3 id="git删除远程库文件"><a href="#git删除远程库文件" class="headerlink" title="git删除远程库文件"></a>git删除远程库文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git --help # 帮助命令</span><br><span class="line">git pull origin master # 将远程仓库里面的项目拉下来</span><br><span class="line">dir # 查看有哪些文件夹</span><br><span class="line">git rm -r --cached yun_app # 删除yun_app文件夹</span><br><span class="line">git commit -m ‘删除了yun_app’ # 提交,添加操作说明</span><br><span class="line">git push -u origin master # 将本次更改更新到github项目上去</span><br></pre></td></tr></table></figure><h3 id="git删除远程分支"><a href="#git删除远程分支" class="headerlink" title="git删除远程分支"></a>git删除远程分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 快速创建分支并切换分支 (dev 分支)</span></span><br><span class="line">git checkout -b dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除分支 ： 如分支名为dev</span></span><br><span class="line">git branch -d dev 会在删除前检查merge状态（其与上游分支或者与head）。</span><br><span class="line">git branch -D dev 它会直接删除,不检查</span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除远程分支</span></span><br><span class="line">git push origin --delete dev</span><br><span class="line"><span class="meta">#</span><span class="bash"> 清理本地不存在的远程分支，如别人删除了dev,但是你本地查看还有，就可以执行该条命令</span></span><br><span class="line">git remote prune origin</span><br></pre></td></tr></table></figure><h3 id="git-分支"><a href="#git-分支" class="headerlink" title="git 分支"></a>git 分支</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* 查看分支：git branch</span><br><span class="line"></span><br><span class="line">* 创建分支：git branch &lt;name&gt;</span><br><span class="line"></span><br><span class="line">* 切换分支：git checkout &lt;name&gt;</span><br><span class="line"></span><br><span class="line">* 创建+切换分支：git checkout -b &lt;name&gt;</span><br><span class="line"></span><br><span class="line">* 合并某分支到当前分支：git merge &lt;name&gt;</span><br><span class="line"></span><br><span class="line">* 删除分支：git branch -d &lt;name&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;推送新创建git&quot;&gt;&lt;a href=&quot;#推送新创建git&quot; class=&quot;headerlink&quot; title=&quot;推送新创建git&quot;&gt;&lt;/a&gt;推送新创建git&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>hugo配置</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/hugo/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/hugo/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:08:31.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="git安装与配置"><a href="#git安装与配置" class="headerlink" title="git安装与配置"></a>git安装与配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> git安装</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install git </span><br><span class="line"><span class="meta">#</span><span class="bash">git配置</span></span><br><span class="line">git config --global user.name &quot;zoey&quot;</span><br><span class="line">git config --global user.email &quot;zoey686@163.com&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">查看设置用户名与密码</span></span><br><span class="line">git config --list</span><br></pre></td></tr></table></figure><h3 id="hugo安装"><a href="#hugo安装" class="headerlink" title="hugo安装"></a>hugo安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装</span></span><br><span class="line">sudo apt install hugo</span><br><span class="line"><span class="meta">#</span><span class="bash"> 手动安装</span></span><br><span class="line">wget https://github.com/gohugoio/hugo/releases/download/v0.54.0/hugo_0.54.0_Linux-64bit.deb</span><br><span class="line">sudo dpkg -i hugo_0.54.0_Linux-64bit.deb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">hugo --help</span><br><span class="line">hugo version</span><br></pre></td></tr></table></figure><h4 id="建立博客"><a href="#建立博客" class="headerlink" title="建立博客"></a>建立博客</h4><p>新建git文件夹用以git模板等，并在文件夹下新建myblog，用来存放博客页面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新建git文件夹并git初始化</span></span><br><span class="line">mkdir gitFile  </span><br><span class="line">git init</span><br><span class="line"><span class="meta">#</span><span class="bash"> 新建myblog文件夹用来存放博客页面</span></span><br><span class="line">hugo new site myblog</span><br></pre></td></tr></table></figure><p>myblog下面就会有以下几个文件夹自动生成</p><table><thead><tr><th align="center">文件夹名</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">archetypes</td><td align="center">文章开头形式</td></tr><tr><td align="center">content</td><td align="center">内容</td></tr><tr><td align="center">data</td><td align="center">自定义模板</td></tr><tr><td align="center">layouts</td><td align="center">网页模板文件</td></tr><tr><td align="center">static</td><td align="center">存储图片一些其他的资源</td></tr><tr><td align="center">themes</td><td align="center">主题</td></tr><tr><td align="center">config.toml</td><td align="center">配置文件</td></tr></tbody></table><h4 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h4><p>在（<a href="https://themes.gohugo.io/%EF%BC%89%E4%B8%AD%E6%8C%91%E9%80%89%E4%B8%BB%E9%A2%98,%E8%BF%99%E9%87%8C%E9%80%89%E6%8B%A9%E7%9A%84%E6%98%AFdiary%E4%B8%BB%E9%A2%98%EF%BC%88[Diary">https://themes.gohugo.io/）中挑选主题,这里选择的是diary主题（[Diary</a> | Hugo Themes (gohugo.io)](<a href="https://themes.gohugo.io/themes/hugo-theme-diary/)%EF%BC%89">https://themes.gohugo.io/themes/hugo-theme-diary/)）</a></p><p>例子：（<a href="https://sunua.gitee.io/simonblog/">浅蓝色 (gitee.io)</a>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载diary主题到themes文件夹下并重命名为diary</span></span><br><span class="line">git submodule add https://github.com/AmazingRise/hugo-theme-diary.git themes/diary</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置config.toml文件</span></span><br><span class="line">nano config.toml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">baseURL = &quot;https://peitianyu.github.io/pty_blog.github.io&quot;</span><br><span class="line">DefaultContentLanguage = &quot;zh&quot; # Theme&#x27;s display language, supports: en, fr, zh, zh-hant</span><br><span class="line">languageCode = &quot;zh-hant&quot;</span><br><span class="line">title = &quot;武装带你&quot;</span><br><span class="line">copyright = &quot;This is a customized copyright.&quot;</span><br><span class="line">theme = &quot;diary&quot;</span><br><span class="line"></span><br><span class="line">[markup]</span><br><span class="line">  [markup.highlight]</span><br><span class="line">    codeFences = true</span><br><span class="line">    guessSyntax = false</span><br><span class="line">    hl_Lines = &quot;&quot;</span><br><span class="line">    lineNoStart = 1</span><br><span class="line">    lineNos = false</span><br><span class="line">    lineNumbersInTable = true</span><br><span class="line">    noClasses = true</span><br><span class="line">    style = &quot;perldoc&quot;</span><br><span class="line">    tabWidth = 4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">enableOpenGraph = true</span><br><span class="line">enableTwitterCards = true</span><br><span class="line">title = &quot;My Blog&quot; </span><br><span class="line">description = &quot;My HomePage Description&quot;  </span><br><span class="line"></span><br><span class="line">[taxonomies]</span><br><span class="line">   ros = &quot;Ros&quot;</span><br><span class="line">   blog = &quot;Blog&quot;</span><br><span class="line"></span><br><span class="line">[[menu.main]]</span><br><span class="line">url = &quot;/blog&quot;</span><br><span class="line">name = &quot;Blog&quot;</span><br><span class="line">weight = 1</span><br><span class="line">[[menu.main]]</span><br><span class="line">url = &quot;/ros&quot;</span><br><span class="line">name = &quot;Ros&quot;</span><br><span class="line">weight = 2</span><br></pre></td></tr></table></figure><h4 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h4><p>默认主目录文章在content/post下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 创建文章</span><br><span class="line">hugo new post/my_first_blog.md</span><br><span class="line">#创建文章在需要目录(Archive)下</span><br><span class="line">hugo new posts/my_first_blog.md</span><br><span class="line">cd content/post</span><br><span class="line">nano my_first_blog.md</span><br><span class="line"># 注意将draft参数改为false，否则跳过草稿文件，无法预览</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &quot;my_first_blog&quot;</span><br><span class="line">date: 2021-10-12T10:49:31+08:00</span><br><span class="line">draft : false</span><br><span class="line">---</span><br><span class="line">文本内容</span><br></pre></td></tr></table></figure><p>本地调试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hugo server --theme=blackburn --buildDrafts</span><br></pre></td></tr></table></figure><p>其中 –theme 选项可以指定主题，–buildDrafts 包括标记为草稿<br>然后在浏览器里打开： <a href="http://localhost:1313/">http://localhost:1313</a> 即可访问到你的博客</p><h4 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h4><p>如果你需要部署在 GitHub Pages 上，首先在GitHub上创建一个Repository，命名为：<code>pty_blog.github.io</code> （<strong>pty_blog替换为你的github用户名的小写</strong>）</p><p>进入仓库，点击<strong>Settings</strong>进入，找到<strong>GitHub Pages</strong>并点击<strong>Check it out here!<strong>，配置</strong>Source</strong>并<strong>save</strong>，会发现绿色框中显现 <code>Your site is published at https://peitianyu.github.io/pty_blog.github.io/</code></p><p>此处<a href="https://peitianyu.github.io/pty_blog.github.io/%E5%B0%B1%E6%98%AF%E6%88%91%E4%BB%AC%E7%9A%84%E7%BD%91%E5%9D%80%EF%BC%8C%E4%B9%9F%E6%98%AFconfig.toml%E6%96%87%E4%BB%B6%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%9A%84%E7%BD%91%E5%9D%80%EF%BC%8C%E8%AE%BE%E7%BD%AEhugo%E7%99%BB%E9%99%86%E7%BD%91%E5%9D%80">https://peitianyu.github.io/pty_blog.github.io/就是我们的网址，也是config.toml文件中设置的网址，设置hugo登陆网址</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hugo --theme=diary --buildDrafts --baseUrl=&quot;https://peitianyu.github.io/pty_blog.github.io/&quot;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：这里的 –baseUrl 一定是https://（Hugo中文文档里为http://），不然你部署后的博客会没有样式！</p><p>可看到根目录下多出 /public文件夹出来，该文件夹的内容即Hugo生成的整个静态网站。然后继续在你的站点根目录执行git 命令，添加远程仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd public</span><br><span class="line">git init</span><br><span class="line">git remote add origin git@github.com:peitianyu/pty_blog.github.io.git</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>然后浏览器里访问：<a href="https://peitianyu.github.io/pty_blog.github.io/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E5%88%9A%E5%88%9A%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E3%80%82">https://peitianyu.github.io/pty_blog.github.io/即可看到刚刚搭建的博客。</a></p><p>发布博客并更新：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 新建博客markdown文件，并编辑博客内容(文件名为 **.md )</span><br><span class="line">hugo new post/newBlog.md</span><br><span class="line"># 生成静态页面</span><br><span class="line">hugo --theme=diary --buildDrafts --baseUrl=&quot;https://peitianyu.github.io/pty_blog.github.io/&quot;</span><br><span class="line"># 发布</span><br><span class="line">cd public</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;new blog added&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;git安装与配置&quot;&gt;&lt;a href=&quot;#git安装与配置&quot; class=&quot;headerlink&quot; title=&quot;git安装与配置&quot;&gt;&lt;/a&gt;git安装与配置&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>jetson_nano 踩坑</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/jetson_nano/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/jetson_nano/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:53:03.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h3><p><a href="https://zhuanlan.zhihu.com/p/166464566">玩转智能硬件之Jetson Nano(一)安装篇 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/Ay_yzx/article/details/113779544">Jetson Nano-配置环境_Ay_yzx的博客-CSDN博客</a></p><h4 id="预先下载"><a href="#预先下载" class="headerlink" title="预先下载:"></a>预先下载:</h4><p><code>balenaEtcher</code></p><p><a href="https://www.balena.io/etcher/">balenaEtcher - Flash OS images to SD cards &amp; USB drives</a></p><p><code>系统下载</code></p><p>官方默认系统:</p><p><a href="https://developer.download.nvidia.cn/embedded/L4T/r32_Release_v6.1/Jeston_Nano/jetson-nano-jp46-sd-card-image.zip?xtLGc386JIwQlfgPPGITNMMx3dC47xG6lIybgH0z9HUPzZaP7ZO2h3U3UFhcpzo7QJsYr-1cCnspcgl929SsucJH043bqSzwC_jUQGxqQuJvmNyIMcrmp8IJopYJUgh41KDf32qZNNeEUEquBj5vkUSAUH_46_UJ1VEv5d1IbYE_36EcSGByIJ1Anw">https://developer.download.nvidia.cn/embedded/L4T/r32_Release_v6.1/Jeston_Nano/jetson-nano-jp46-sd-card-image.zip?xtLGc386JIwQlfgPPGITNMMx3dC47xG6lIybgH0z9HUPzZaP7ZO2h3U3UFhcpzo7QJsYr-1cCnspcgl929SsucJH043bqSzwC_jUQGxqQuJvmNyIMcrmp8IJopYJUgh41KDf32qZNNeEUEquBj5vkUSAUH_46_UJ1VEv5d1IbYE_36EcSGByIJ1Anw</a></p><p>Ubuntu18.04:</p><p><a href="https://pan.baidu.com/share/init?surl=QXd34V5FfLcFk2XDgphoig">https://pan.baidu.com/share/init?surl=QXd34V5FfLcFk2XDgphoig</a> 密码 : tun3</p><p><code>sd卡格式化工具</code></p><p><a href="https://www.sdcard.org/downloads/formatter/sd-memory-card-formatter-for-windows-download/">SD Memory Card Formatter for Windows Download | SD Association (sdcard.org)</a></p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤:"></a>安装步骤:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.格式化sd卡</span><br><span class="line">2.使用balenaEtcher烧录下载好的系统</span><br><span class="line">3.插上卡后做初始化设置</span><br></pre></td></tr></table></figure><h3 id="jetson三种供电方式"><a href="#jetson三种供电方式" class="headerlink" title="jetson三种供电方式:"></a>jetson三种供电方式:</h3><h4 id="参考网址-1"><a href="#参考网址-1" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/weixin_44350337/article/details/111674531?ops_request_misc=%7B%22request_id%22:%22163456105816780262525022%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163456105816780262525022&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-111674531.pc_search_ecpm_flag&utm_term=jetson+%E4%BE%9B%E7%94%B5&spm=1018.2226.3001.4187">Jetson nano 的三种供电方式_Dunkle.T的博客-CSDN博客_jetson nano供电</a></p><h4 id="分别为"><a href="#分别为" class="headerlink" title="分别为:"></a>分别为:</h4><ul><li>USB供电(默认5v2a 仅低功率),使用时拔去条线帽</li><li>使用 DC 供电(默认5v 4A),使用时插上跳线帽</li><li>使用引脚供电(5v3a 无所谓跳线帽)</li></ul><h4 id="查看cuda配置"><a href="#查看cuda配置" class="headerlink" title="查看cuda配置"></a>查看cuda配置</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install jetson-stats</span><br><span class="line">sudo jtop</span><br></pre></td></tr></table></figure><h3 id="关于ros安装"><a href="#关于ros安装" class="headerlink" title="关于ros安装"></a>关于ros安装</h3><h4 id="参考网址-2"><a href="#参考网址-2" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/">ROS_安装 (peitianyu.github.io)</a></p><h4 id="其他部分按ros安装教程来即可"><a href="#其他部分按ros安装教程来即可" class="headerlink" title="其他部分按ros安装教程来即可"></a>其他部分按ros安装教程来即可</h4><p>比较实用的方案是先按照我的步骤安装ros,之后再通过<code>fishros一行代码</code>解决rosdep问题</p><h3 id="远程连接nano"><a href="#远程连接nano" class="headerlink" title="远程连接nano"></a>远程连接nano</h3><p><code>ssh.exe usrname@192.168.xxx.xxx</code></p><h3 id="jetson-nano初始化配置"><a href="#jetson-nano初始化配置" class="headerlink" title="jetson nano初始化配置"></a>jetson nano初始化配置</h3><h4 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h4><p><code>静态ip设置</code>:<a href="https://www.cnblogs.com/blueyunchao0618/p/11394640.html">Ubuntu 18.04配置静态IP地址)</a></p><h4 id="root免密登录"><a href="#root免密登录" class="headerlink" title="root免密登录"></a>root免密登录</h4><p><code>参考网址</code>:<a href="https://blog.csdn.net/qq_44673299/article/details/108658078?ops_request_misc=%7B%22request_id%22:%22163463123116780271513740%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163463123116780271513740&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-108658078.pc_search_ecpm_flag&utm_term=Ubuntu18+root%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95&spm=1018.2226.3001.4187">ubuntu设置root免密登陆</a></p><h3 id="vscode连接jetson-nano"><a href="#vscode连接jetson-nano" class="headerlink" title="vscode连接jetson nano"></a>vscode连接jetson nano</h3><h4 id="参考网址-3"><a href="#参考网址-3" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/sqlquan/article/details/111918019?ops_request_misc=%7B%22request_id%22:%22163463106616780264095126%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163463106616780264095126&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-111918019.pc_search_ecpm_flag&utm_term=vscode+ssh&spm=1018.2226.3001.4187">vscode设置ssh进行远程编辑_Quan的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/166464566&quot;&gt;玩转智能硬件之Jets</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://github.com/peitianyu/blog.git/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://github.com/peitianyu/blog.git/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>make配置模板</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/make%E6%A8%A1%E6%9D%BF/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/make%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:53:25.577Z</updated>
    
    <content type="html"><![CDATA[<h3 id="make文件目录"><a href="#make文件目录" class="headerlink" title="make文件目录"></a>make文件目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-49LFJ4NT:/root/make# tree</span><br><span class="line">.</span><br><span class="line">├── Makefile</span><br><span class="line">├── conf.sh</span><br><span class="line">├── main.cpp</span><br><span class="line">└── shell.sh</span><br></pre></td></tr></table></figure><p>这里使用了shell脚本来实现对于make的编译，由于使用的是<code>wsl</code>在windows下操作导致编码格式含有<code>\r\n</code>，以此有两个shell脚本。</p><h3 id="conf-sh"><a href="#conf-sh" class="headerlink" title="conf.sh"></a>conf.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 实现对于make的编译与运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 == clean ]]; then</span><br><span class="line">        make clean</span><br><span class="line">elif [[ $1 == all ]]; then</span><br><span class="line">        make clean &amp;&amp; make -j8 &amp;&amp; ./main</span><br><span class="line">else</span><br><span class="line">        make -j8 &amp;&amp; ./main</span><br></pre></td></tr></table></figure><h3 id="shell-sh"><a href="#shell-sh" class="headerlink" title="shell.sh"></a>shell.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 实现将conf.sh的dos编码转化为unix编码，并执行</span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">dos2unix  conf.sh &amp;&amp; ./conf.sh</span><br></pre></td></tr></table></figure><h3 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动捕捉符合c/c++编译</span></span><br><span class="line"><span class="comment">#指定编译工具</span></span><br><span class="line">CC = gcc</span><br><span class="line">CPP = g++</span><br><span class="line">LINK = g++</span><br><span class="line"></span><br><span class="line">LIBS = -lsqlite3 -lpthread</span><br><span class="line"><span class="comment">#编译.so 必须添加 -fPIC 和 -shared 选项</span></span><br><span class="line">CCFLAGS = -c -g -fPIC</span><br><span class="line">CPPFLAGS = -c -g -fPIC</span><br><span class="line"></span><br><span class="line"><span class="comment">#期望得到的执行文件或动态库.so</span></span><br><span class="line"><span class="comment">#TARGET=libxx.so</span></span><br><span class="line">TARGET=main</span><br><span class="line"></span><br><span class="line">INCLUDES = -I. <span class="comment">#-I../../</span></span><br><span class="line"></span><br><span class="line">CPPFILES = <span class="variable">$(<span class="built_in">wildcard</span> *.cpp )</span><span class="comment">#遍历得到当前目录及上层目录中的所有.cpp文件</span></span><br><span class="line">CFILES = <span class="variable">$(<span class="built_in">wildcard</span> *.c )</span><span class="comment">#遍历得到当前目录及上层目录中的所有.c文件</span></span><br><span class="line"></span><br><span class="line">OBJFILE = $(CFILES:.c=.o) $(CPPFILES:.cpp=.o)</span><br><span class="line"></span><br><span class="line"><span class="section">all:<span class="variable">$(TARGET)</span></span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET)</span>:<span class="variable">$(OBJFILE)</span></span><br><span class="line"><span class="comment"># 编译得到 .so 文件用下面的代码</span></span><br><span class="line"><span class="comment">#   $(LINK) $^ $(LIBS) -Wall -fPIC -shared -o $@</span></span><br><span class="line"><span class="comment"># 编译得到可执行文件用下面的代码</span></span><br><span class="line">        <span class="variable">$(LINK)</span> <span class="variable">$^</span> <span class="variable">$(LIBS)</span> -Wall -O2 -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o:%.c</span></span><br><span class="line">        <span class="variable">$(CC)</span> -o <span class="variable">$@</span> <span class="variable">$(CCFLAGS)</span> <span class="variable">$&lt;</span> <span class="variable">$(INCLUDES)</span></span><br><span class="line"></span><br><span class="line"><span class="section">%.o:%.cpp</span></span><br><span class="line">        <span class="variable">$(CPP)</span> -o <span class="variable">$@</span> <span class="variable">$(CPPFLAGS)</span> <span class="variable">$&lt;</span> <span class="variable">$(INCLUDES)</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">        rm -rf <span class="variable">$(TARGET)</span></span><br><span class="line">        rm -rf <span class="variable">$(OBJFILE)</span></span><br></pre></td></tr></table></figure><h3 id="main-c"><a href="#main-c" class="headerlink" title="main.c"></a>main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, World! \n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./shell</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;make文件目录&quot;&gt;&lt;a href=&quot;#make文件目录&quot; class=&quot;headerlink&quot; title=&quot;make文件目录&quot;&gt;&lt;/a&gt;make文件目录&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/categories/%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>mpg处理</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/mpg%E5%A4%84%E7%90%86/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/mpg%E5%A4%84%E7%90%86/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:53:53.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h3><p><a href="https://blog.csdn.net/qq_44343584/article/details/119992961">(47条消息) ROS开发实践（十三）——ROS中SLAM地图（.pgm格式）编辑软件的安装与使用_Ehang_Maker的博客-CSDN博客</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h3><h4 id="参考网址-1"><a href="#参考网址-1" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="http://gimp.baisheng999.com/">Gimp中文网 (baisheng999.com)</a></p><h4 id="windows安装流程"><a href="#windows安装流程" class="headerlink" title="windows安装流程:"></a>windows安装流程:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注意选择安装路径,其他下一步即可</span><br></pre></td></tr></table></figure><h3 id="流程"><a href="#流程" class="headerlink" title="流程:"></a>流程:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.选择使用笔刷工具</span><br><span class="line">2.设置笔刷大小,硬度为100,力度为100,线型为直线</span><br><span class="line">3.按住Ctrl选择颜色</span><br><span class="line">4.释放后刷刷刷</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_44343584/article/details/1</summary>
      
    
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/categories/ros/"/>
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>nano操作</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/nano%E6%93%8D%E4%BD%9C/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/nano%E6%93%8D%E4%BD%9C/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:07:46.628Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h3><ul><li><a href="https://blog.csdn.net/weixin_39591031/article/details/114236749?ops_request_misc=%7B%22request_id%22:%22163464180216780269866385%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163464180216780269866385&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-114236749.pc_search_ecpm_flag&utm_term=nano%E4%BD%BF%E7%94%A8&spm=1018.2226.3001.4187">nano使用技巧大全_Xav Pun的博客-CSDN博客_nano使用教程</a></li></ul><h3 id="便捷快捷键"><a href="#便捷快捷键" class="headerlink" title="便捷快捷键"></a>便捷快捷键</h3><p>注意前缀键<code>Ctrl+b</code>按完后松开，再按下其他键。</p><table><thead><tr><th align="center">快捷键</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center"><em>Alt+x</em></td><td align="center">切换帮助栏</td></tr><tr><td align="center"><em>ALT-#</em></td><td align="center">显示行号</td></tr><tr><td align="center"><em>CTRL-K</em></td><td align="center">剪切到行末</td></tr><tr><td align="center">ALT+6</td><td align="center">复制</td></tr><tr><td align="center">SHIFT+方向</td><td align="center">选择</td></tr><tr><td align="center">CTRL+u</td><td align="center">粘贴</td></tr><tr><td align="center">Alt + u</td><td align="center">撤销</td></tr><tr><td align="center">Alt + e</td><td align="center">重复</td></tr><tr><td align="center">ALT+&lt;</td><td align="center"><em>切换到上一个文件</em></td></tr><tr><td align="center">ALT+&gt; / alt +</td><td align="center"><em>切换到下一个文件</em></td></tr><tr><td align="center">CTRL+X</td><td align="center">关闭</td></tr><tr><td align="center">CTRL+R CTRL+T</td><td align="center">文件浏览器</td></tr><tr><td align="center">CTRL+C</td><td align="center">退出文件选择界面</td></tr><tr><td align="center">CTRL+S</td><td align="center">保存</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址&quot;&gt;&lt;/a&gt;参考网址&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39591031/article/d</summary>
      
    
    
    
    <category term="linux" scheme="https://github.com/peitianyu/blog.git/categories/linux/"/>
    
    
    <category term="linux" scheme="https://github.com/peitianyu/blog.git/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ros_cmake配置模板</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/ros_cmake/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/ros_cmake/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:07:56.706Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简易CmakeLists-txt"><a href="#简易CmakeLists-txt" class="headerlink" title="简易CmakeLists.txt"></a>简易CmakeLists.txt</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.8</span>.<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工程名</span></span><br><span class="line"><span class="keyword">project</span>(hmi)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 支持编译</span></span><br><span class="line"><span class="keyword">add_compile_options</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找包</span></span><br><span class="line"><span class="keyword">find_package</span>(catkin REQUIRED COMPONENTS</span><br><span class="line">  roscpp</span><br><span class="line">  sensor_msgs</span><br><span class="line">  pcl_ros</span><br><span class="line">  perception_msgs</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># catkin库</span></span><br><span class="line">catkin_package(</span><br><span class="line">  INCLUDE_DIRS <span class="keyword">include</span></span><br><span class="line">  CATKIN_DEPENDS roscpp sensor_msgs pcl_ros</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头文件库</span></span><br><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line"> <span class="keyword">include</span></span><br><span class="line">  <span class="variable">$&#123;catkin_INCLUDE_DIRS&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接库文件夹</span></span><br><span class="line"><span class="keyword">link_directories</span>(<span class="variable">$&#123;PCL_LIBRARY_DIRS&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_node src/hmi_node.cpp src/hmi_core.cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 依赖包</span></span><br><span class="line"><span class="keyword">add_dependencies</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_node perception_msgs_generate_messages_cpp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 链接库</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span>_node</span><br><span class="line">  <span class="variable">$&#123;catkin_LIBRARIES&#125;</span></span><br><span class="line">  <span class="variable">$&#123;PCL_LIBRARIES&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="详细CmakeLists-txt"><a href="#详细CmakeLists-txt" class="headerlink" title="详细CmakeLists.txt"></a>详细CmakeLists.txt</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>()  <span class="comment">#CMake的版本号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>()         <span class="comment">#项目名称</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>()        <span class="comment">#找到编译需要的其他CMake/Catkin  package </span></span><br><span class="line"></span><br><span class="line">catkin_python_setup()   <span class="comment">#catkin新加宏，打开catkin的Python Module的支持</span></span><br><span class="line"></span><br><span class="line">add_message_files()     <span class="comment">#catkin新加宏，添加自定义Message文件 </span></span><br><span class="line"></span><br><span class="line">add_service_files()         <span class="comment">#catkin新加宏，添加自定义Service文件 </span></span><br><span class="line"></span><br><span class="line">add_action_files()          <span class="comment">#catkin新加宏，添加自定义Action文件 </span></span><br><span class="line"></span><br><span class="line">generate_message()      <span class="comment">#catkin新加宏，生成不同语言版本的msg/srv/action接口 </span></span><br><span class="line"></span><br><span class="line">catkin_package()      <span class="comment">#catkin新加宏，生成当前package的cmake配置，供依赖本包的其他软件包调用 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>()       <span class="comment">#生成库 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>()      <span class="comment">#生成可执行二进制文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_dependencies</span>()      <span class="comment">#定义目标文件依赖于其他目标文件，确保其他目标已被构建 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>()   <span class="comment">#链接</span></span><br><span class="line"></span><br><span class="line">catkin_add_gtest()      <span class="comment">#catkin新加宏，生成测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">install</span>()         <span class="comment">#安装至本机</span></span><br></pre></td></tr></table></figure><h3 id="对照实例"><a href="#对照实例" class="headerlink" title="对照实例"></a>对照实例</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.0</span>.<span class="number">2</span>)    <span class="comment"># catkin至少需要3.0.2版本以上的Cmake</span></span><br><span class="line"><span class="comment">#通过project()这个函数指定包的名字，在CMake中指定后，你可在其他地方通过使用变量$&#123;PROJECT_NAME&#125;来引用它</span></span><br><span class="line"><span class="keyword">project</span>(ultrasonic_data) </span><br><span class="line"></span><br><span class="line"><span class="comment">## Compile as C++11, supported in ROS Kinetic and newer</span></span><br><span class="line"><span class="comment"># add_compile_options(-std=c++11)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查找编译依赖的其他CMake/Catkin包（声明依赖库）：find_package(）  </span></span><br><span class="line"><span class="comment">##find_package(catkin REQUIRED COMPONENTS xyz) 被用于找其他依赖的功能包</span></span><br><span class="line"><span class="comment">##这里指明构建这个package需要依赖的package，我们使用catkin_make的编译方式，至少需要catkin这个包。</span></span><br><span class="line"><span class="keyword">find_package</span>(catkin REQUIRED COMPONENTS</span><br><span class="line">  message_generation</span><br><span class="line">  roscpp</span><br><span class="line">  sensor_msgs</span><br><span class="line">  std_msgs</span><br><span class="line">  visualization_msgs</span><br><span class="line">  can_msgs</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 系统依赖关系是通过CMake的约定找到的</span></span><br><span class="line"><span class="comment"># find_package(Boost REQUIRED COMPONENTS system)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##启动Python模块支持：catkin_python_package()</span></span><br><span class="line"><span class="comment">##如果功能包中提供了一些Python模块.这个宏定义可以确保包中声明的模块和全局脚本被安装</span></span><br><span class="line"><span class="comment">## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html</span></span><br><span class="line"><span class="comment"># catkin_python_setup()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment">## 声明ROS消息、服务和动作 ##</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 消息/服务/操作(Message/Service/Action)生成器：add_message_files(),add_service_files(),add_action_files()</span></span><br><span class="line"><span class="comment">##当我们需要使用.msg.srv.action形式的文件时，我们需要特殊的预处理器把他们转化为系统可以识别特定编程语言（.h.cpp）。</span></span><br><span class="line"><span class="comment">##注意：这些宏必须在catkin_package() 宏前面</span></span><br><span class="line"><span class="comment">##请执行以下步骤：</span></span><br><span class="line"><span class="comment">## * 在package.xml中:</span></span><br><span class="line"><span class="comment">## *1.添加&quot;message_generation&quot;在build_depend标记中</span></span><br><span class="line"><span class="comment">## *2.添加&quot;message_runtime&quot;在exec_depend标记中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## * 在CMakeLists.txt中:</span></span><br><span class="line"><span class="comment">## *1、在find_package(catkin REQUIRED COMPONENTS ...)添加&quot;message_generation&quot; </span></span><br><span class="line"><span class="comment">## *2、在catkin_package(CATKIN_DEPENDS ...)添加&quot;message_runtime&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##   根据需要取消下面“add_######_files”部分的注释</span></span><br><span class="line"><span class="comment">##   * 取消下面的generate_messages(DEPENDENCIES...注释</span></span><br><span class="line"><span class="comment">##   * add every package  to generate_messages(DEPENDENCIES ...)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##  在&#x27;msg&#x27; 文件夹生成消息</span></span><br><span class="line"> add_message_files(</span><br><span class="line">   FILES</span><br><span class="line">   Ultrasonic.msg</span><br><span class="line"><span class="comment">#   Message2.msg</span></span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line"><span class="comment">##在 &#x27;srv&#x27; 文件夹生成服务</span></span><br><span class="line"><span class="comment"># add_service_files(</span></span><br><span class="line"><span class="comment">#   FILES</span></span><br><span class="line"><span class="comment">#   Service1.srv</span></span><br><span class="line"><span class="comment">#   Service2.srv</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在 &#x27;action&#x27; 文件夹生成动作</span></span><br><span class="line"><span class="comment"># add_action_files(</span></span><br><span class="line"><span class="comment">#   FILES</span></span><br><span class="line"><span class="comment">#   Action1.action</span></span><br><span class="line"><span class="comment">#   Action2.action</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在此处列出的任何添加的消息和服务生成的依赖项</span></span><br><span class="line"><span class="comment">##调用消息/服务/操作生成：generate_messages()</span></span><br><span class="line"> generate_messages(</span><br><span class="line">   DEPENDENCIES</span><br><span class="line"><span class="comment">#   sensor_msgs</span></span><br><span class="line">     std_msgs</span><br><span class="line"><span class="comment">#   visualization_msgs</span></span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line"><span class="comment">################################################</span></span><br><span class="line"><span class="comment">##声明ROS动态配置参数 ##</span></span><br><span class="line"><span class="comment">################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 声明和生成动态重新配置参数包:遵循以下步骤</span></span><br><span class="line"><span class="comment">## * 在package.xml中:</span></span><br><span class="line"><span class="comment">## *添加&quot;dynamic_reconfigure&quot;在build_depend和exec_depend标记中</span></span><br><span class="line"><span class="comment">## * 在CMakeLists.txt中:</span></span><br><span class="line"><span class="comment">## *在find_package(catkin REQUIRED COMPONENTS ...)添加&quot;dynamic_reconfigure&quot; </span></span><br><span class="line"><span class="comment">## * 取消下面 &quot;generate_dynamic_reconfigure_options&quot; 的注释</span></span><br><span class="line"><span class="comment">## 列出要处理的每个.cfg文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## Generate dynamic reconfigure parameters in the &#x27;cfg&#x27; folder</span></span><br><span class="line"><span class="comment"># generate_dynamic_reconfigure_options(</span></span><br><span class="line"><span class="comment">#   cfg/DynReconf1.cfg</span></span><br><span class="line"><span class="comment">#   cfg/DynReconf2.cfg</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################################</span></span><br><span class="line"><span class="comment">## catkin 特定的配置 ##</span></span><br><span class="line"><span class="comment">###################################</span></span><br><span class="line"><span class="comment">##  catkin_package为包生成cmake配置文件  这是一个catkin提供的cmake宏，当我们要给构建系统指定catkin的特定的信息时就需要了</span></span><br><span class="line"><span class="comment">##  或者反过来利用他产生pkg-config和CMake文件。</span></span><br><span class="line"><span class="comment">##指定包编译信息导出：catkin_package()</span></span><br><span class="line"><span class="comment">## 该函数必须在使用 add_library()或add_executable()声明任何targets之前调用。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## INCLUDE_DIRS: 如果包包含头文件，请取消对INCLUDE_DIRS的注释</span></span><br><span class="line"><span class="comment">## LIBRARIES: 此项目中创建的依赖项目需要的库LIBRARIES</span></span><br><span class="line"><span class="comment">## CATKIN_DEPENDS: catkin_packages依赖的项目</span></span><br><span class="line"><span class="comment">## DEPENDS:  依赖项目需要的系统依赖项</span></span><br><span class="line">catkin_package(</span><br><span class="line">    INCLUDE_DIRS <span class="keyword">include</span></span><br><span class="line"><span class="comment">#  LIBRARIES ultrasonic_data</span></span><br><span class="line">    CATKIN_DEPENDS </span><br><span class="line">    message_runtime</span><br><span class="line"><span class="comment">#  DEPENDS system_lib</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"><span class="comment">## Build ##</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## include_directories用来设置头文件的相对路径</span></span><br><span class="line"><span class="comment">##include_directories的参数是通过find_package产生的*_INCLUDE_DIRS变量和其他所有额外的头文件路径</span></span><br><span class="line"><span class="comment">##这里&quot;include&quot;表示你的pacakge里面的include这个路径也包含在里面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line">  <span class="keyword">include</span></span><br><span class="line">  <span class="variable">$&#123;catkin_INCLUDE_DIRS&#125;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">##########################################################################</span></span><br><span class="line"><span class="comment">##添加要编译的库和可执行文件：add_library()/add_executable()/target_link_libraries()##</span></span><br><span class="line"><span class="comment">##########################################################################</span></span><br><span class="line"><span class="comment">## add_library()用来指定编译产生的库。默认的catkin编译产生共享库：</span></span><br><span class="line"><span class="comment"># add_library($&#123;PROJECT_NAME&#125;</span></span><br><span class="line"><span class="comment">#   src/$&#123;PROJECT_NAME&#125;/ultrasonic_data.cpp</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## add_dependencies用于设置依赖</span></span><br><span class="line"><span class="comment">##如果你有一个包编译.msg .srv，并且可执行文件要使用他们，那么你就需要创建一个显式的依赖项，</span></span><br><span class="line"><span class="comment">## 我们定义的语言无关的消息类型，消息类型会在编译过程中产生相应的语言的代码，如果编译的可执行文件依赖这些动态生成的代码，则需要</span></span><br><span class="line"><span class="comment">## 使用add_dependencies($&#123;PROJECT_NAME&#125;_generate_messages_cpp)</span></span><br><span class="line"><span class="comment">## add_dependencies($&#123;PROJECT_NAME&#125; $&#123;$&#123;PROJECT_NAME&#125;_EXPORTED_TARGETS&#125; $&#123;catkin_EXPORTED_TARGETS&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## add_executable用于设置需要编译的代码和生成的可执行文件</span></span><br><span class="line"><span class="comment">##第一个参数为期望生成的可执行文件名称；后面的参数为参与编译的源文件（cpp),如果需要多个代码文件，用空格区分开</span></span><br><span class="line"><span class="comment">## 推荐的前缀可以确保跨包的目标名称不会冲突</span></span><br><span class="line"><span class="comment"># add_executable($&#123;PROJECT_NAME&#125;_node src/ultrasonic_data_node.cpp)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 重命名C++无前缀可执行文件</span></span><br><span class="line"><span class="comment">## 利用set_target_properties()函数将这个target进行重命名，在catkin中target的名字必须是唯一的</span></span><br><span class="line"><span class="comment"># set_target_properties($&#123;PROJECT_NAME&#125;_node PROPERTIES OUTPUT_NAME node PREFIX &quot;&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加可执行文件的cmake目标依赖项</span></span><br><span class="line"><span class="comment">## same as for the library above与上面的库相同</span></span><br><span class="line"><span class="comment"># add_dependencies($&#123;PROJECT_NAME&#125;_node $&#123;$&#123;PROJECT_NAME&#125;_EXPORTED_TARGETS&#125; $&#123;catkin_EXPORTED_TARGETS&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##target_link_libraries用于设置链接库</span></span><br><span class="line"><span class="comment"># target_link_libraries($&#123;PROJECT_NAME&#125;_node</span></span><br><span class="line"><span class="comment">#   $&#123;catkin_LIBRARIES&#125;</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(ultrasonic_activate_node</span><br><span class="line">  src/ultrasonic_activate_node.cpp</span><br><span class="line">)</span><br><span class="line"><span class="keyword">add_dependencies</span>(ultrasonic_activate_node <span class="variable">$&#123;$&#123;PROJECT_NAME&#125;</span>_EXPORTED_TARGETS&#125; <span class="variable">$&#123;catkin_EXPORTED_TARGETS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(ultrasonic_activate_node</span><br><span class="line">  <span class="variable">$&#123;catkin_LIBRARIES&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(ultrasonic_node</span><br><span class="line">  src/ultrasonic_node.cpp</span><br><span class="line">  src/ultrasonic_filter.cpp</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"><span class="keyword">add_dependencies</span>(ultrasonic_node <span class="variable">$&#123;$&#123;PROJECT_NAME&#125;</span>_EXPORTED_TARGETS&#125; <span class="variable">$&#123;catkin_EXPORTED_TARGETS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(ultrasonic_node</span><br><span class="line">  <span class="variable">$&#123;catkin_LIBRARIES&#125;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#############</span></span><br><span class="line"><span class="comment">###安装至本机 ##</span></span><br><span class="line"><span class="comment">#############</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有安装目标都应该使用catkin目标变量</span></span><br><span class="line"><span class="comment"># See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##安装Python可执行脚本</span></span><br><span class="line"><span class="comment"># catkin_install_python(PROGRAMS</span></span><br><span class="line"><span class="comment">#   scripts/my_python_script</span></span><br><span class="line"><span class="comment">#   DESTINATION $&#123;CATKIN_PACKAGE_BIN_DESTINATION&#125;</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装的可执行文件</span></span><br><span class="line"><span class="comment">## See http://docs.ros.org/melodic/api/catkin/html/howto/format1/building_executables.html</span></span><br><span class="line"><span class="comment"># install(TARGETS $&#123;PROJECT_NAME&#125;_node</span></span><br><span class="line"><span class="comment">#   RUNTIME DESTINATION $&#123;CATKIN_PACKAGE_BIN_DESTINATION&#125;</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 要安装的库</span></span><br><span class="line"><span class="comment">##编译完成后，目标被放入catkin工作空间下的devel目录。一般希望将目标安装到系统上，以使其他用户使用，</span></span><br><span class="line"><span class="comment">##或者安装到本地目录来测试系统级别的安装。也就是说，如果希望能够对代码进行make install，就需要明确目标结束的位置。</span></span><br><span class="line"><span class="comment">##上述过程可以使用CMake的 install()函数实现。</span></span><br><span class="line"><span class="comment">##该函数的参数有</span></span><br><span class="line"><span class="comment">##TARGETS：要安装的目标</span></span><br><span class="line"><span class="comment">##ARCHIVE DESTINATION：静态库和动态链接库DLL(Windows).lib存根</span></span><br><span class="line"><span class="comment">##LIBRARY DESTINATION：非DLL共享库和模块</span></span><br><span class="line"><span class="comment">##RUNTIME DESTINATION：可执行目标和DLL(Windows)模式共享库</span></span><br><span class="line"><span class="comment">## See http://docs.ros.org/melodic/api/catkin/html/howto/format1/building_libraries.html</span></span><br><span class="line"><span class="comment"># install(TARGETS $&#123;PROJECT_NAME&#125;</span></span><br><span class="line"><span class="comment">#   ARCHIVE DESTINATION $&#123;CATKIN_PACKAGE_LIB_DESTINATION&#125;</span></span><br><span class="line"><span class="comment">#   LIBRARY DESTINATION $&#123;CATKIN_PACKAGE_LIB_DESTINATION&#125;</span></span><br><span class="line"><span class="comment">#   RUNTIME DESTINATION $&#123;CATKIN_GLOBAL_BIN_DESTINATION&#125;</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装头文件</span></span><br><span class="line"><span class="comment">##头文件必须安装到include目录下，这通常通过安装整个文件夹的文件来完成（可以根据文件名模式进行过滤，并排除SVN子文件夹）</span></span><br><span class="line"><span class="comment">##可以通过以下安装规则实现：</span></span><br><span class="line"><span class="comment"># install(DIRECTORY include/$&#123;PROJECT_NAME&#125;/</span></span><br><span class="line"><span class="comment">#   DESTINATION $&#123;CATKIN_PACKAGE_INCLUDE_DESTINATION&#125;</span></span><br><span class="line"><span class="comment">#   FILES_MATCHING PATTERN &quot;*.h&quot;</span></span><br><span class="line"><span class="comment">#   PATTERN &quot;.svn&quot; EXCLUDE</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 安装roslaunch文件或其他源</span></span><br><span class="line"><span class="comment">##其他像launchfiles的资源可以安装到 $&#123;CATKIN_PACKAGE_SHARE_DESTINATION&#125;</span></span><br><span class="line"><span class="comment"># install(FILES</span></span><br><span class="line"><span class="comment">#   # myfile1</span></span><br><span class="line"><span class="comment">#   # myfile2</span></span><br><span class="line"><span class="comment">#   DESTINATION $&#123;CATKIN_PACKAGE_SHARE_DESTINATION&#125;</span></span><br><span class="line"><span class="comment"># )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"><span class="comment">## 测试编译：catkin_add_gtest()##</span></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 基于gtest测试目标和链接库</span></span><br><span class="line"><span class="comment"># catkin_add_gtest($&#123;PROJECT_NAME&#125;-test test/test_ultrasonic_data.cpp)</span></span><br><span class="line"><span class="comment"># if(TARGET $&#123;PROJECT_NAME&#125;-test)</span></span><br><span class="line"><span class="comment">#   target_link_libraries($&#123;PROJECT_NAME&#125;-test $&#123;PROJECT_NAME&#125;)</span></span><br><span class="line"><span class="comment"># endif()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 添加要由python osetests运行的文件夹</span></span><br><span class="line"><span class="comment"># catkin_add_nosetests(test)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="具体可参考网址"><a href="#具体可参考网址" class="headerlink" title="具体可参考网址"></a>具体可参考网址</h3><p><a href="https://blog.csdn.net/yangtao420902/article/details/110873333?ops_request_misc=%7B%22request_id%22:%22163430132516780264065592%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163430132516780264065592&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-8-110873333.pc_search_ecpm_flag&utm_term=ros%E7%9A%84CMakeLists%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187">ROS中的CMake List详解_yangtao420902的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/CipherPolzz/article/details/118963390?ops_request_misc=%7B%22request_id%22:%22163430132516780264065592%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163430132516780264065592&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-6-118963390.pc_search_ecpm_flag&utm_term=ros%E7%9A%84CMakeLists%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187">ROS下CmakeLists.txt模板_CipherPolzz的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_43877080/article/details/110953533?ops_request_misc=%7B%22request_id%22:%22163430132516780264065592%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163430132516780264065592&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-5-110953533.pc_search_ecpm_flag&utm_term=ros%E7%9A%84CMakeLists%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187">ROS新建程序包CmakeLists和package详解_JayLee719的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_32761549/article/details/104535989?ops_request_misc=%7B%22request_id%22:%22163430132516780264065592%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163430132516780264065592&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-3-104535989.pc_search_ecpm_flag&utm_term=ros%E7%9A%84CMakeLists%E8%AF%A6%E8%A7%A3&spm=1018.2226.3001.4187">(46条消息) ROS中CMakeLists.txt文件 使用 讲解与总结_月照银海似蛟龙的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;简易CmakeLists-txt&quot;&gt;&lt;a href=&quot;#简易CmakeLists-txt&quot; class=&quot;headerlink&quot; title=&quot;简易CmakeLists.txt&quot;&gt;&lt;/a&gt;简易CmakeLists.txt&lt;/h3&gt;&lt;figure class=&quot;hi</summary>
      
    
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/categories/ros/"/>
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros安装</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/ros%E5%AE%89%E8%A3%85/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/ros%E5%AE%89%E8%A3%85/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:26:22.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu18.04</span><br><span class="line">ros-melodic-desktop-full</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list.d/ros-latest.list</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ bionic main</span><br><span class="line">sudo apt-key adv --keyserver &#x27;hkp://keyserver.ubuntu.com:80&#x27; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt-get install ros-melodic-desktop-full</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化</span></span><br><span class="line">sudo rosdep init</span><br><span class="line">rosdep update</span><br><span class="line">sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential</span><br><span class="line">sudo echo &quot;source /opt/ros/melodic/setup.bash&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><h3 id="一行代码安装ros（包含问题处理）"><a href="#一行代码安装ros（包含问题处理）" class="headerlink" title="一行代码安装ros（包含问题处理）"></a>一行代码安装ros（包含问题处理）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; sudo bash fishros</span><br></pre></td></tr></table></figure><p>参考视频：</p><p><a href="https://mp.weixin.qq.com/s/8hTrKL0N5y9i6s9ujhp0UA">玩着游戏听着歌，就把ROS装好了！一行代码搞定系列！ (qq.com)</a></p><h3 id="安装问题"><a href="#安装问题" class="headerlink" title="安装问题"></a>安装问题</h3><p><code>rosdep init</code>不成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd /etc</span><br><span class="line">sudo mkdir ros</span><br><span class="line">cd ros</span><br><span class="line">sudo mkdir rosdep</span><br><span class="line">cd rosdep</span><br><span class="line">sudo mkdir source.list.d</span><br><span class="line">cd source.list.d</span><br><span class="line">sudo touch 20-default.list</span><br><span class="line">sudo vim 20-default.list</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#os-specific listings first</span><br><span class="line">yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml osx</span><br><span class="line"> </span><br><span class="line">#generic</span><br><span class="line">yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml</span><br><span class="line">yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml</span><br><span class="line">yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml</span><br><span class="line">gbpdistro https://raw.githubusercontent.com/ros/rosdistro/master/releases/fuerte.yaml fuerte</span><br><span class="line"> </span><br><span class="line">#newer distributions (Groovy, Hydro, …) must not be listed anymore, they are being </span><br><span class="line">#fetched from the rosdistro index.yaml instead</span><br></pre></td></tr></table></figure><p><code>rosdep update</code>问题</p><p>首先调大执行时间，更改 <code>/usr/lib/python2.7/dist-packages/rosdep2/</code>下的三个文件<code>sources_list.py</code>、<code>gbpdistro_support.py</code>、<code>rep3.py</code>中的<code>DOWNLOAD_TIMEOUT = 15.0</code>值，我一般直接改成999。  终端输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py</span><br></pre></td></tr></table></figure><p>修改<code>DOWNLOAD_TIMEOUT</code>后，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/hosts</span><br></pre></td></tr></table></figure><p>在最后一行加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">151.101.84.133  raw.githubusercontent.com</span><br></pre></td></tr></table></figure><p>连上<strong>手机热点</strong>，重新<code>rosdep update</code>多次后，成功。</p><p>建议采用<code>fishros</code>解决这个问题,会非常舒爽.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; sudo bash fishros</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove --purge ros-melodic</span><br><span class="line"><span class="meta">#</span><span class="bash"> 先卸载包</span></span><br><span class="line">sudo apt-get purge ros-*</span><br><span class="line"><span class="meta">#</span><span class="bash"> 然后删除依赖，配置</span></span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/catkin_ws/src</span><br><span class="line">cd ~/catkin_ws/</span><br><span class="line">catkin_make</span><br><span class="line">source devel/setup.bash</span><br><span class="line">roscore</span><br></pre></td></tr></table></figure><p>打开新窗口执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>出现小乌龟则安装完成。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装环境&quot;&gt;&lt;a href=&quot;#安装环境&quot; class=&quot;headerlink&quot; title=&quot;安装环境&quot;&gt;&lt;/a&gt;安装环境&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/categories/ros/"/>
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ros错误集锦</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/ros%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/ros%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:55:11.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="“cv-bridge“解决办法"><a href="#“cv-bridge“解决办法" class="headerlink" title="“cv_bridge“解决办法"></a>“cv_bridge“解决办法</h2><h3 id="出现问题"><a href="#出现问题" class="headerlink" title="出现问题:"></a>出现问题:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CMake Error at /opt/ros/kinetic/share/catkin/cmake/catkinConfig.cmake:83 (find_package):</span><br><span class="line">Could not find a package configuration file provided by “cv_bridge” with</span><br><span class="line">any of the following names:</span><br><span class="line"></span><br><span class="line">cv_bridgeConfig.cmake</span><br><span class="line">cv_bridge-config.cmake</span><br></pre></td></tr></table></figure><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法:"></a>解决办法:</h3><p><a href="https://www.it610.com/article/1282152021410988032.htm">CMake Error ：Could not find a package configuration file provided by “cv_bridge“解决办法</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;“cv-bridge“解决办法&quot;&gt;&lt;a href=&quot;#“cv-bridge“解决办法&quot; class=&quot;headerlink&quot; title=&quot;“cv_bridge“解决办法&quot;&gt;&lt;/a&gt;“cv_bridge“解决办法&lt;/h2&gt;&lt;h3 id=&quot;出现问题&quot;&gt;&lt;a href</summary>
      
    
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/categories/ros/"/>
    
    
    <category term="ros" scheme="https://github.com/peitianyu/blog.git/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>ssh</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/ssh/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/ssh/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:55:33.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h3><ul><li><a href="https://blog.csdn.net/li528405176/article/details/82810342?ops_request_misc=%7B%22request_id%22:%22163464883116780261940241%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163464883116780261940241&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-82810342.pc_search_ecpm_flag&utm_term=ssh&spm=1018.2226.3001.4187">SSH简介及两种远程登录的方法_德prince-CSDN博客_ssh</a></li></ul><h4 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-client </span><br><span class="line">sudo apt-get install openssh-server </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看启动情况</span></span><br><span class="line">ps -e | grep ssh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动 停止 重启</span></span><br><span class="line">sudo /etc/init.d/ssh start </span><br><span class="line">sudo /etc/init.d/ssh stop  #server停止ssh服务 </span><br><span class="line">sudo /etc/init.d/ssh restart  #server重启ssh服务</span><br></pre></td></tr></table></figure><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><h4 id="口令登录"><a href="#口令登录" class="headerlink" title="口令登录"></a>口令登录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基础登录</span></span><br><span class="line">ssh ldz@192.168.0.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 调用图形界面</span></span><br><span class="line">ssh -X ldz@192.168.0.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果客户机的用户名和服务器的用户名相同，登录时可以省略用户名。</span></span><br><span class="line">ssh 192.168.0.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> -p修改端口,默认22端口</span></span><br><span class="line">ssh -p 1234 ldz@192.168.0.1</span><br></pre></td></tr></table></figure><p>第一次连时需要确认连接,选yes,即可成功</p><p>遇到问题:</p><p><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOT</code></p><p>bug解决:</p><p>ssh-keygen -R 192.168.0.1</p><h4 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h4><p><code>Ctrl+d</code>或者<code>exit</code></p><h4 id="公钥登录"><a href="#公钥登录" class="headerlink" title="公钥登录"></a>公钥登录</h4><h5 id="在本机生成密钥对"><a href="#在本机生成密钥对" class="headerlink" title="在本机生成密钥对"></a>在本机生成密钥对</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa   #-t表示类型选项，这里采用rsa加密算法</span><br></pre></td></tr></table></figure><h5 id="将公钥复制到远程主机"><a href="#将公钥复制到远程主机" class="headerlink" title="将公钥复制到远程主机"></a>将公钥复制到远程主机</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id ldz@192.168.0.1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址&quot;&gt;&lt;/a&gt;参考网址&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/li528405176/article/detai</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>tmux使用</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/tmux/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/tmux/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:56:24.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h3><ul><li><p><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">Tmux 使用教程 - 阮一峰的网络日志 (ruanyifeng.com)</a></p></li><li><p><a href="https://www.hamvocke.com/blog/a-quick-and-easy-guide-to-tmux/">A Quick and Easy Guide to tmux</a></p></li><li><p><a href="https://danielmiessler.com/study/tmux/">Tactical tmux: The 10 Most Important Commands</a></p></li><li><p><a href="https://linuxize.com/post/getting-started-with-tmux/">Getting started with Tmux</a></p></li></ul><h3 id="便捷快捷键"><a href="#便捷快捷键" class="headerlink" title="便捷快捷键"></a>便捷快捷键</h3><p>注意前缀键<code>Ctrl+b</code>按完后松开，再按下其他键。</p><table><thead><tr><th align="center">快捷键</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">Ctrl+d</td><td align="center">退出</td></tr><tr><td align="center">Ctrl+b s</td><td align="center">列出所有会话</td></tr><tr><td align="center">Ctrl+b %</td><td align="center">划分左右两个窗格</td></tr><tr><td align="center">Ctrl+b “</td><td align="center">划分上下两个窗格</td></tr><tr><td align="center">Ctrl+b o</td><td align="center">切换到下一个窗格</td></tr><tr><td align="center">Ctrl+b x</td><td align="center">关闭当前窗格</td></tr><tr><td align="center">Ctrl+b c</td><td align="center">创建一个新窗口</td></tr><tr><td align="center">Ctrl+b n</td><td align="center">切换到下一个窗口</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址&quot;&gt;&lt;/a&gt;参考网址&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.ruanyifeng.com/blog/2019/10/tmux</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>几款terminal</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/terminal/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/terminal/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:55:58.329Z</updated>
    
    <content type="html"><![CDATA[<h3 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h3><p><code>Powershell</code>,<code>Windows terminal</code>,<code>wsl-terminal</code>,<code>fluent terminal</code>,<code>xshell</code>,<code>Mobaxterm</code>,<code>putty</code></p><h3 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h3><p>最基础的远程终端,只需要通过ssh指令连接远程终端即可.如,<code>ssh.exe pty@192.168.30.100</code></p><h3 id="Windows-terminal"><a href="#Windows-terminal" class="headerlink" title="Windows terminal"></a>Windows terminal</h3><p>同样可以用指令打开,同时也可以配置,打开wsl,ssh都比较方便,点击即用.但有些丑.当然也可以配置网上教程挺多,再次不做过多介绍.</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># powershell输入</span></span><br><span class="line">winget install --id=Microsoft.WindowsTerminal -e</span><br><span class="line"><span class="comment"># 通过Chocolatey</span></span><br><span class="line">choco upgrade microsoft-windows-terminal</span><br></pre></td></tr></table></figure><h4 id="右键打开windows-terimnal-未测试"><a href="#右键打开windows-terimnal-未测试" class="headerlink" title="右键打开windows terimnal(未测试)"></a>右键打开windows terimnal(未测试)</h4><p>保存为<code>install.bat</code>文件打开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Windows Terminal]</span><br><span class="line">; 右键菜单中显示的名称</span><br><span class="line">@=<span class="string">&quot;Windows Terminal&quot;</span></span><br><span class="line">; 右键菜单中显示的图标</span><br><span class="line"><span class="string">&quot;Icon&quot;</span>=<span class="string">&quot;C:\\Toolkits\\Icons\\App\\WindowsTerminal.ico&quot;</span></span><br><span class="line">; 仅支持在按住Shift+右键的时候才显示</span><br><span class="line"><span class="string">&quot;Extended&quot;</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">; </span><br><span class="line"><span class="string">&quot;NoWorkingDirectory&quot;</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">; 在菜单中显示或隐藏</span><br><span class="line"><span class="string">&quot;ShowBasedOnVelocityId&quot;</span>=dword:00639bc8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Windows Terminal\Command]</span><br><span class="line">@=<span class="string">&quot;C:\\Users\\xyz\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe -d \&quot;%V\&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="fluent-terminal"><a href="#fluent-terminal" class="headerlink" title="fluent terminal"></a>fluent terminal</h3><p>好看但没有<code>windows terminal</code>那么方便,不过可以设置快捷键,也还行.</p><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install fluent-terminal</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载zip文件解压安装</span></span><br><span class="line">https://github.com/felixse/FluentTerminal/releases</span><br></pre></td></tr></table></figure><p>下载完毕后解压，选择 <code>Install.ps1</code> 文件，右键使用 powershell 运行。</p><h4 id="右键打开"><a href="#右键打开" class="headerlink" title="右键打开"></a>右键打开</h4><p>保存为<code>install.bat</code>文件打开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\Directory\shell\Open Fluent Terminal here\command&quot; /d &quot;\&quot;%LOCALAPPDATA%\Microsoft\WindowsApps\flute.exe\&quot; new \&quot;%%1\&quot;&quot; /f</span><br><span class="line"></span><br><span class="line">reg add &quot;HKCU\Software\Classes\Directory\Background\shell\Open Fluent Terminal here\command&quot; /d &quot;\&quot;%LOCALAPPDATA%\Microsoft\WindowsApps\flute.exe\&quot; new \&quot;%%V\&quot;&quot; /f</span><br><span class="line"></span><br><span class="line">reg add &quot;HKCU\Software\Classes\LibraryFolder\Background\shell\Open Fluent Terminal here\command&quot; /d &quot;\&quot;%LOCALAPPDATA%\Microsoft\WindowsApps\flute.exe\&quot; new \&quot;%%V\&quot;&quot; /f</span><br></pre></td></tr></table></figure><h4 id="右键关闭"><a href="#右键关闭" class="headerlink" title="右键关闭"></a>右键关闭</h4><p>保存为<code>Uninstall.bat</code>文件打开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">reg delete &quot;HKCU\Software\Classes\Directory\shell\Open Fluent Terminal here&quot; /f</span><br><span class="line"></span><br><span class="line">reg delete &quot;HKCU\Software\Classes\Directory\Background\shell\Open Fluent Terminal here&quot; /f</span><br><span class="line">reg delete &quot;HKCU\Software\Classes\LibraryFolder\Background\shell\Open Fluent Terminal here&quot; /f</span><br></pre></td></tr></table></figure><h3 id="wsl-terminal"><a href="#wsl-terminal" class="headerlink" title="wsl-terminal"></a>wsl-terminal</h3><p>加u个人使用而言,如果多个wsl,则没那么舒爽.当然也可以像powershell那样<code>wsl -d Ubuntu</code>这样切换版本</p><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/ly50247/article/details/80131656?ops_request_misc=%7B%22request_id%22:%22163481452216780366511110%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163481452216780366511110&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-80131656.pc_search_ecpm_flag&utm_term=open-wsl&spm=1018.2226.3001.4187">使用 wsl-terminal 更好地体验 Win 10 WSL 终端环境</a></p><p>写的比较详细就不具体赘述了</p><h3 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h3><p>是一款集合ssh,串口的远程软件,但每次都需要开启后配置参数,对于懒人不友好.</p><h4 id="参考网址-1"><a href="#参考网址-1" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/weixin_40705360/article/details/104008419?ops_request_misc=%7B%22request_id%22:%22163481518116780366579230%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163481518116780366579230&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-104008419.pc_search_ecpm_flag&utm_term=putty%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B&spm=1018.2226.3001.4187">putty使用教程(总结)</a></p><h3 id="xshell"><a href="#xshell" class="headerlink" title="xshell"></a>xshell</h3><p>具有putty相似的功能,同时还有<strong>stfp</strong>文件传输,只需点击即可使用.但对于需要调试gui程序而言,需要购买正式版,嗯…………大佬随意.</p><h4 id="参考网址-2"><a href="#参考网址-2" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/hxy1625309592/article/details/110356421?ops_request_misc=%7B%22request_id%22:%22163481523916780269886657%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163481523916780269886657&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-110356421.pc_search_ecpm_flag&utm_term=xhsell&spm=1018.2226.3001.4187">Xshell使用基础教程_</a></p><h3 id="Mobaxterm"><a href="#Mobaxterm" class="headerlink" title="Mobaxterm"></a>Mobaxterm</h3><p>集百家之长于一身,因此使用起来没那么方便,但使用后非常舒爽.值得一提的是,远程文件是可以根据终端实时更新的,同时<strong>支持拖拽文件,新建文件,文件夹,本地编辑文件</strong>,这就很爽了.</p><h4 id="参考网址-3"><a href="#参考网址-3" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://blog.csdn.net/qq_28721869/article/details/114652520?ops_request_misc=%7B%22request_id%22:%22163481551616780269883117%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163481551616780269883117&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-114652520.pc_search_ecpm_flag&utm_term=Mobaxterm&spm=1018.2226.3001.4187">全能终端神器mobaxterm入坑指南</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;终端&quot;&gt;&lt;a href=&quot;#终端&quot; class=&quot;headerlink&quot; title=&quot;终端&quot;&gt;&lt;/a&gt;终端&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Powershell&lt;/code&gt;,&lt;code&gt;Windows terminal&lt;/code&gt;,&lt;code&gt;wsl-termin</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu18源</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/ubuntu%E6%9B%B4%E6%96%B0%E6%BA%90/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/ubuntu%E6%9B%B4%E6%96%B0%E6%BA%90/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:56:51.336Z</updated>
    
    <content type="html"><![CDATA[<h4 id="更新软件源"><a href="#更新软件源" class="headerlink" title="更新软件源"></a>更新软件源</h4><p>参考网址：<a href="https://blog.csdn.net/qq_35451572/article/details/79516563">Ubuntu 更换国内源_quanwei的博客-CSDN博客_ubuntu换源</a></p><h5 id="阿里源-（Ubuntu-18-04）"><a href="#阿里源-（Ubuntu-18-04）" class="headerlink" title="阿里源 （Ubuntu 18.04）"></a>阿里源 （Ubuntu 18.04）</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -f install</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h5 id="西电源（只有校内网网线使用，但是不限制流量，还是十分靠谱的）"><a href="#西电源（只有校内网网线使用，但是不限制流量，还是十分靠谱的）" class="headerlink" title="西电源（只有校内网网线使用，但是不限制流量，还是十分靠谱的）"></a>西电源（只有校内网网线使用，但是不限制流量，还是十分靠谱的）</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line">#deb-src http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line">#deb-src http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line">#deb-src http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#deb http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">#deb-src http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#deb http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class="line">#deb-src http://linux.xidian.edu.cn/mirrors/ubuntu/ xenial-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><h5 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><h5 id="网易源"><a href="#网易源" class="headerlink" title="网易源"></a>网易源</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><h5 id="中科大"><a href="#中科大" class="headerlink" title="中科大"></a>中科大</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">##中科大源</span><br><span class="line"></span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="树莓派更换国内源"><a href="#树莓派更换国内源" class="headerlink" title="树莓派更换国内源"></a>树莓派更换国内源</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 备份</span></span><br><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加入,Ctrl+s保存,Ctrl+X退出.</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 修改系统更新源</span></span><br><span class="line">sudo nano /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 加入</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sud apt upgrade</span><br></pre></td></tr></table></figure><h3 id="Ubuntu18换回原来源"><a href="#Ubuntu18换回原来源" class="headerlink" title="Ubuntu18换回原来源"></a>Ubuntu18换回原来源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span><br><span class="line"># newer versions of the distribution.</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic main restricted</span><br><span class="line"></span><br><span class="line">## Major bug fix updates produced after the final release of the</span><br><span class="line">## distribution.</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main restricted</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><br><span class="line">## team. Also, please note that software in universe WILL NOT receive any</span><br><span class="line">## review or updates from the Ubuntu security team.</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic universe</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic universe</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates universe</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates universe</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span><br><span class="line">## team, and may not be under a free licence. Please satisfy yourself as to</span><br><span class="line">## your rights to use the software. Also, please note that software in</span><br><span class="line">## multiverse WILL NOT receive any review or updates from the Ubuntu</span><br><span class="line">## security team.</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic multiverse</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic multiverse</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-updates multiverse</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-updates multiverse</span><br><span class="line"></span><br><span class="line">## N.B. software from this repository may not have been tested as</span><br><span class="line">## extensively as that contained in the main release, although it includes</span><br><span class="line">## newer versions of some applications which may provide useful features.</span><br><span class="line">## Also, please note that software in backports WILL NOT receive any review</span><br><span class="line">## or updates from the Ubuntu security team.</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">## Uncomment the following two lines to add software from Canonical&#x27;s</span><br><span class="line">## &#x27;partner&#x27; repository.</span><br><span class="line">## This software is not part of Ubuntu, but is offered by Canonical and the</span><br><span class="line">## respective vendors as a service to Ubuntu users.</span><br><span class="line"># deb http://archive.canonical.com/ubuntu bionic partner</span><br><span class="line"># deb-src http://archive.canonical.com/ubuntu bionic partner</span><br><span class="line"></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security main restricted</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security universe</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security universe</span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ bionic-security multiverse</span><br><span class="line"># deb-src http://ports.ubuntu.com/ubuntu-ports/ bionic-security multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;更新软件源&quot;&gt;&lt;a href=&quot;#更新软件源&quot; class=&quot;headerlink&quot; title=&quot;更新软件源&quot;&gt;&lt;/a&gt;更新软件源&lt;/h4&gt;&lt;p&gt;参考网址：&lt;a href=&quot;https://blog.csdn.net/qq_35451572/article/de</summary>
      
    
    
    
    <category term="linux" scheme="https://github.com/peitianyu/blog.git/categories/linux/"/>
    
    
    <category term="linux" scheme="https://github.com/peitianyu/blog.git/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>win自启动程序</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/win%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/win%E8%87%AA%E5%90%AF%E5%8A%A8/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:08:05.700Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记事本写入脚本"><a href="#记事本写入脚本" class="headerlink" title="记事本写入脚本"></a>记事本写入脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">time  /t  &gt;&gt;c:\<span class="built_in">test</span>\log1.log</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>  %username%  &gt;&gt;c:\<span class="built_in">test</span>\log1.log</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span>  %computername%  &gt;&gt;c:\<span class="built_in">test</span>\log1.log</span><br></pre></td></tr></table></figure><p>另存为<code>start.bat</code>，无人见类型为所有类型</p><h3 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h3><p>点击<code>运行</code>，输入<code>gpedit.msc</code>,具体操作如下：</p><p><img src="https://img-blog.csdnimg.cn/20190304120752202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYyNTU3Nw==,size_16,color_FFFFFF,t_70" alt="img"></p><h3 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h3><p>可以发现，脚本运行了</p><p><img src="https://img-blog.csdnimg.cn/20190304120752279.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYyNTU3Nw==,size_16,color_FFFFFF,t_70" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;记事本写入脚本&quot;&gt;&lt;a href=&quot;#记事本写入脚本&quot; class=&quot;headerlink&quot; title=&quot;记事本写入脚本&quot;&gt;&lt;/a&gt;记事本写入脚本&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;</summary>
      
    
    
    
    <category term="win" scheme="https://github.com/peitianyu/blog.git/categories/win/"/>
    
    
    <category term="win" scheme="https://github.com/peitianyu/blog.git/tags/win/"/>
    
  </entry>
  
  <entry>
    <title>wsl安装与使用</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/wsl/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/wsl/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:57:42.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="wsl安装"><a href="#wsl安装" class="headerlink" title="wsl安装"></a>wsl安装</h3><p>参考网址：</p><p><a href="https://docs.microsoft.com/zh-cn/windows/terminal/get-started">Windows 终端安装 | Microsoft Docs</a></p><p><a href="https://hengyumo.blog.csdn.net/article/details/102544521">玩转Linux(1)——安装Windows亲儿子Linux系统之WSL之最全攻略之最佳体验之究极无敌舒服_衡与墨的博客-CSDN博客</a></p><p>管理员身份运行Powershell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br><span class="line"> wsl --install -d Ubuntu</span><br></pre></td></tr></table></figure><h3 id="wsl使用"><a href="#wsl使用" class="headerlink" title="wsl使用"></a>wsl使用</h3><ul><li><h4 id="进入linux系统"><a href="#进入linux系统" class="headerlink" title="进入linux系统"></a>进入linux系统</h4></li></ul><p>命令行输入<code>wsl</code>或者<code>bash</code>，进入linux系统</p><ul><li><h4 id="linux初始配置"><a href="#linux初始配置" class="headerlink" title="linux初始配置"></a>linux初始配置</h4></li></ul><h5 id="添加sudo，这样就不用输密码了"><a href="#添加sudo，这样就不用输密码了" class="headerlink" title="添加sudo，这样就不用输密码了"></a>添加sudo，这样就不用输密码了</h5><p><img src="https://img-blog.csdnimg.cn/20191014120116452.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20191014142719338.png" alt="在这里插入图片描述"></p><p>修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">sudo ALL=(ALL:ALL) ALL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 改为</span></span><br><span class="line"><span class="meta">%</span><span class="bash">sudo ALL=(ALL:ALL) NOPASSWD:ALL</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h4></li></ul><p>参考网址：</p><p><a href="https://blog.csdn.net/Alisebeast/article/details/106680267">WSL2运行图像应用或图形界面_Alisebeast的博客-CSDN博客_wsl2 图形界面</a></p><p><a href="https://blog.csdn.net/qq_45036130/article/details/105623451">在WSL中打开与显示图片的简单方法_neetneves的博客-CSDN博客</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export DISPLAY=localhost:0&quot; &gt;&gt; ~/.bashrc</span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>测试查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo $DISPLAY</span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span><br><span class="line">xclock</span><br></pre></td></tr></table></figure><ul><li><h4 id="更新软件源"><a href="#更新软件源" class="headerlink" title="更新软件源"></a>更新软件源</h4></li></ul><p>参考网址：<a href="https://blog.csdn.net/qq_35451572/article/details/79516563">Ubuntu 更换国内源_quanwei的博客-CSDN博客_ubuntu换源</a></p><ul><li><h4 id="wsl命令详解"><a href="#wsl命令详解" class="headerlink" title="wsl命令详解"></a>wsl命令详解</h4></li></ul><table><thead><tr><th align="center">命令</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">wsl或bash</td><td align="center">打开默认子系统</td></tr><tr><td align="center">wsl -d Ubuntu18</td><td align="center">打开Ubuntu18子系统</td></tr><tr><td align="center">wsl -l -o</td><td align="center">可安装的有效分发的列表</td></tr><tr><td align="center">wsl –install -d Ubuntu</td><td align="center">安装默认Ubuntu</td></tr><tr><td align="center">wsl –shutdown</td><td align="center">关闭子系统</td></tr><tr><td align="center">wsl –import Ubuntu-20.04 d:\ubuntu d:\ubuntu20.04.tar –version 2</td><td align="center">导入已存的操作系统</td></tr><tr><td align="center">wsl –export Ubuntu-20.04 d:\ubuntu20.04.tar</td><td align="center">导出操作子系统</td></tr><tr><td align="center">wsl -l -v</td><td align="center">显示所有子系统</td></tr><tr><td align="center">wsl -s Ubuntu-20.04</td><td align="center">将分发版设置为默认值</td></tr><tr><td align="center">bash -c “ls”</td><td align="center">windows命令提示符</td></tr><tr><td align="center">wsl –unregister Ubuntu-20.04</td><td align="center">注销分发版</td></tr><tr><td align="center">wslconfig /s Ubuntu-18.04</td><td align="center">修改默认子系统</td></tr></tbody></table><ul><li><h4 id="wsl-terminal"><a href="#wsl-terminal" class="headerlink" title="wsl-terminal"></a><em>wsl</em>-terminal</h4></li></ul><p>参考网址：</p><p><a href="https://github.com/mskyaxl/wsl-terminal">mskyaxl/wsl-terminal: Terminal emulator for Windows Subsystem for Linux (WSL) (github.com)</a></p><p>最常用的依旧是<code>Windows Terminal</code>参考网址</p><p>[Windows Terminal配置_人间世-CSDN博客](<a href="https://blog.csdn.net/rjszz1314/article/details/111354738?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=windows">https://blog.csdn.net/rjszz1314/article/details/111354738?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=windows</a> terminal&amp;utm_medium=distribute.pc_search_result.none-task-blog-2<del>all</del>sobaiduweb~default-4-111354738.pc_search_ecpm_flag&amp;spm=1018.2226.3001.4187)</p><p><a href="https://blog.csdn.net/c13232906050/article/details/90698772?ops_request_misc=%7B%22request_id%22:%22163439638216780261990702%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163439638216780261990702&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-90698772.pc_search_ecpm_flag&utm_term=windows+terminal%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187">Windows Terminal 新终端下载安装_Archon-CSDN博客_terminal 下载</a></p><h5 id="Windows-Terminal安装"><a href="#Windows-Terminal安装" class="headerlink" title="Windows Terminal安装"></a>Windows Terminal安装</h5><p>方式一：</p><p>微软商店安装</p><p><a href="https://www.microsoft.com/zh-cn/p/windows-terminal/9n0dx20hk701?rtc=1&activetab=pivot:overviewtab">购买 Windows Terminal - Microsoft Store zh-CN</a></p><p>方式二：</p><p><a href="https://blog.csdn.net/c13232906050/article/details/90698772?ops_request_misc=%7B%22request_id%22:%22163439638216780261990702%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163439638216780261990702&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-4-90698772.pc_search_ecpm_flag&utm_term=windows+terminal%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187">Windows Terminal 新终端下载安装_Archon-CSDN博客_terminal 下载</a></p><p>方式三：</p><p><a href="https://github.com/microsoft/Terminal">https://github.com/microsoft/Terminal</a> </p><p>使用Visual Studio打开构建运行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;wsl安装&quot;&gt;&lt;a href=&quot;#wsl安装&quot; class=&quot;headerlink&quot; title=&quot;wsl安装&quot;&gt;&lt;/a&gt;wsl安装&lt;/h3&gt;&lt;p&gt;参考网址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/zh-cn/win</summary>
      
    
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/categories/tool/"/>
    
    
    <category term="tool" scheme="https://github.com/peitianyu/blog.git/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>编程规范</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/%E7%BC%96%E7%A8%8B%E8%A7%84%E8%8C%83/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T06:07:29.530Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程规范"><a href="#编程规范" class="headerlink" title="编程规范"></a>编程规范</h1><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><h4 id="1-原则"><a href="#1-原则" class="headerlink" title="1. 原则"></a>1. 原则</h4><ol><li>简洁明了，提高代码可读性，读的是代码而不是注释，注释永远都是辅助的。</li><li>零告警，严谨的语法才能保障代码表达和编译器理解的是一至的。</li></ol><h4 id="2-排版"><a href="#2-排版" class="headerlink" title="2. 排版"></a>2. 排版</h4><ol><li>程序块之间、变量声明之间，用空行分隔</li><li>突出语法关键字</li><li>一行不要太长，换行增加可读性</li><li>Tab键排版</li></ol><h4 id="3-注释"><a href="#3-注释" class="headerlink" title="3. 注释"></a>3. 注释</h4><ol><li><p>注释的目的是阐明意图目的，而不是翻译某行代码的动作</p></li><li><p>注释的原则是尽量代码自注释，代码越清晰，可读性越高</p></li><li><p>统一格式 **/* 注释内容 */**， *号与注释内容之间有一个空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/*************************************************</span><br><span class="line">Copyright  //版权</span><br><span class="line">File name: // 文件名</span><br><span class="line">Author： //作者</span><br><span class="line">Version:  //版本号</span><br><span class="line">Description: // 用于详细说明此程序文件完成的主要功能，与其他模块</span><br><span class="line">// 或函数的接口，输出值、取值范围、含义及参数间的控</span><br><span class="line">// 制、顺序、独立或依赖等关系</span><br><span class="line">Others: // 其它内容的说明</span><br><span class="line">Log: // 修改日志，包括修改内容，日期，修改人等</span><br><span class="line">*************************************************/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">*@ Description: 函数描述，描述本函数的基本功能</span><br><span class="line">* @param 1 – 参数 1.</span><br><span class="line">* @param 2 – 参数 2</span><br><span class="line">* @return – 返回值</span><br><span class="line">*/</span><br></pre></td></tr></table></figure></li></ol><h4 id="4-定义"><a href="#4-定义" class="headerlink" title="4. 定义"></a>4. 定义</h4><ol><li><p>命名风格</p><ol><li>模块名+文件名+功能描述，之间采用短下划线分隔</li><li>功能描述部分，采用驼峰风格</li></ol><p>例如，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SAFE_LASER_setLaserShield</span><span class="params">(<span class="keyword">uint8_t</span> _EN)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>宏定义</p><ol><li>define 必须大写</li><li>typedef 可以小写</li></ol><p>例如，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OS_TASK_R200RXID1 0x198 <span class="comment">/* HEX格式 */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> StackSize_t；   <span class="comment">/* 仅用于堆栈 */</span></span><br></pre></td></tr></table></figure></li><li><p>类型定义</p><p>使用linux自带类型定义规则</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint8_t  unsigned char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int8_t   char</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint16_t unsigned short</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int16_t  short</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint32_t unsigned int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int32_t  int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> uint64_t unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int64_t  long long</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE  1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NULL  0</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="5-变量"><a href="#5-变量" class="headerlink" title="5. 变量"></a>5. 变量</h4><ol><li>变量通用规则<ol><li>采用驼峰风格,首字母大写</li><li>在函数开始是全部定义，不允许在函数中间定义</li><li>变量命名必须可以表示其含义</li><li>必须初始化</li></ol></li><li>局部变量<ol><li>本地局部变量必须用static关键字修饰</li></ol></li><li>全局变量<ol><li>全局变量必须以g开头</li></ol></li><li>函数变量<ol><li>变量必须以_开头</li></ol></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static uint8_t SafeLaserSet = 0;</span><br><span class="line">uint8_t gSafeLaserSet = 0;</span><br><span class="line">static uint8_t _SafeLaserSet = 0;</span><br></pre></td></tr></table></figure><h4 id="6-函数"><a href="#6-函数" class="headerlink" title="6. 函数"></a>6. 函数</h4><ol><li>函数名必须能够自注释，必要是需要增加注释写明意图</li><li>内部函数必须使用static定义，命名可以不加模块名</li><li>外部函数<ol><li>必须在头文件中声明，</li><li>命名时必须带模块名，</li><li>必须给出带注释，并写明函数意图，参数说明，返回值</li></ol></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">static uint_t SAFE_LASER_setLaseShield(uint8_t _EN);</span><br><span class="line">void SAFE_LASER_setLaseShield(uint8_t _EN);</span><br></pre></td></tr></table></figure><h4 id="7-文件"><a href="#7-文件" class="headerlink" title="7. 文件"></a>7. 文件</h4><ol><li><p>头文件</p><ol><li><p>命名规则模块名+功能，小写，例如os_task.h</p></li><li><p>格式如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __OS_TASK_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __OS_TASK_H__</span></span><br><span class="line"></span><br><span class="line">....<span class="comment">/* 开放的宏定义 */</span></span><br><span class="line">....<span class="comment">/* 开放的全局变量声明 */</span></span><br><span class="line">....<span class="comment">/* 开放的函数声明 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>源文件</p><ol><li><p>命名规则模块名+功能，小写，例如os_task.c</p></li><li><p>格式如下，举例只为说明源文件中，各元素的顺序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;- <span class="number">1</span> - 引用头文件 -&gt;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;os_task.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">&lt;- <span class="number">2</span> - 定义本文件用到的宏 -&gt;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OS_TASK_SWITCH_INTERVAL 10 <span class="comment">/* 单位ms */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">uint32_t</span> StackSize_t ；  <span class="comment">/* 仅用于堆栈 */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span>&#123;</span>&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span>&#123;</span>&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>&#125;;</span><br><span class="line"></span><br><span class="line">&lt;- <span class="number">3</span> - 本地变量 -&gt;</span><br><span class="line"><span class="keyword">static</span> StackSize_t *TopStack = <span class="literal">NULL</span>；</span><br><span class="line"></span><br><span class="line">&lt;- <span class="number">4</span> - 开放的全局变量 -&gt;</span><br><span class="line"><span class="keyword">uint32_t</span> gOsTaskEventBitMap = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">&lt;- <span class="number">5</span> - 本地函数，仅在本文件使用 -&gt;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TASK_TaskSwitch</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;- <span class="number">6</span> - 开放的函数 -&gt;</span><br><span class="line"><span class="keyword">void</span> OS_TASK_TaskDelay(<span class="keyword">uint16_t</span> _ms)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">return</span>；   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h4 id="8-约定俗成简写"><a href="#8-约定俗成简写" class="headerlink" title="8.约定俗成简写"></a>8.约定俗成简写</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">addition           add           加</span><br><span class="line">subtraction sub              减</span><br><span class="line">multiplication mul           乘法</span><br><span class="line">division          div             除法</span><br><span class="line">answer            ans           响应、回答</span><br><span class="line">array               arr             数组、集合</span><br><span class="line">average          avg            平均</span><br><span class="line">buffer              buf或buff   缓冲区</span><br><span class="line">capture           cap或capt  捕获</span><br><span class="line">check              chk            检查</span><br><span class="line">count              cnt            计数器</span><br><span class="line">column            col            列</span><br><span class="line">control            ctrl            控制</span><br><span class="line">decode           dec           解码、译码</span><br><span class="line">define             def           定义</span><br><span class="line">delete             del           删除</span><br><span class="line">destination     dst或dest 目的</span><br><span class="line">display           disp          显示</span><br><span class="line">encode          enc            编码</span><br><span class="line">environment  env           环境</span><br><span class="line">error              err             错误</span><br><span class="line">float               flt              浮动、浮点</span><br><span class="line">frequency      freq           频率</span><br><span class="line">header          hdr            开始、开头</span><br><span class="line">index             idx            索引、指示、</span><br><span class="line">image            img           影像、镜像</span><br><span class="line">increment      inc            增加、增量</span><br><span class="line">initalize         init            初始化</span><br><span class="line">iteration        itr             循环、迭代</span><br><span class="line">length           len            长度</span><br><span class="line">memory        mem          内存</span><br><span class="line">middle           mid           中值</span><br><span class="line">make             mk            制造、形成</span><br><span class="line">message       msg          消息</span><br><span class="line">number         num          数量、编号</span><br><span class="line">operand        opnd        操作数</span><br><span class="line">optimization  opt           最优</span><br><span class="line">operator       optr          操作</span><br><span class="line">packet          pkt            消息包</span><br><span class="line">positon         pos           位置</span><br><span class="line">previous       pre或prev  以前的</span><br><span class="line">pointer         ptr             指针</span><br><span class="line">record          rcd             记录</span><br><span class="line">receive         recv           收到、接收</span><br><span class="line">result           res             结果</span><br><span class="line">return          ret              返回</span><br><span class="line">source         src              源头</span><br><span class="line">stack           stk              栈</span><br><span class="line">string          str               字符串</span><br><span class="line">table           tab              表</span><br><span class="line">temporary   tmp或temp  临时</span><br><span class="line">total            tot               全部的</span><br><span class="line">time stamp  ts                时间戳</span><br><span class="line">value           val              值</span><br></pre></td></tr></table></figure><p>有互斥意义的变量或者动作相反的函数应该是用互斥词组命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add/remove  begin/end create/destroy insert/delete </span><br><span class="line">first/last get/release increment/decrement put/get add/delete</span><br><span class="line">lock/unlock open/close min/max old/new </span><br><span class="line">start/stop next/previous source/target show/hide </span><br><span class="line">send/receive source/destination copy/paste up/down</span><br></pre></td></tr></table></figure><h4 id="9-模块"><a href="#9-模块" class="headerlink" title="9. 模块"></a>9. 模块</h4><ol><li><p>模块必须具有封装性，且对外提供尽量少的必要接口，接口必须提供详细的注释描述</p></li><li><p>模块的组织形式可以是文件夹形式，也可以是文件形式</p></li><li><p>文件都以小写命名</p><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">    ├── src <span class="comment">/* 应用层代码 */</span></span><br><span class="line">    │   ├── main.c <span class="comment">/* 应用入口 */</span></span><br><span class="line">    │   ├── test.c</span><br><span class="line">    │   ├── test1.c  </span><br><span class="line">    ├── include <span class="comment">/* 设备驱动代码 */</span></span><br><span class="line">    │   ├── test.h</span><br><span class="line">    │   ├── test1.h </span><br><span class="line">    ├── debug <span class="comment">/* 芯片厂家提供的库代码 */</span></span><br><span class="line">    │   ├── MakeFile</span><br><span class="line">    │   ├── CMake</span><br><span class="line">    │   └── main</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;编程规范&quot;&gt;&lt;a href=&quot;#编程规范&quot; class=&quot;headerlink&quot; title=&quot;编程规范&quot;&gt;&lt;/a&gt;编程规范&lt;/h1&gt;&lt;h3 id=&quot;规范&quot;&gt;&lt;a href=&quot;#规范&quot; class=&quot;headerlink&quot; title=&quot;规范&quot;&gt;&lt;/a&gt;规范&lt;/h</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://github.com/peitianyu/blog.git/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://github.com/peitianyu/blog.git/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>项目模板</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/%E6%A8%A1%E6%9D%BF%E6%A1%88%E4%BE%8B/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/%E6%A8%A1%E6%9D%BF%E6%A1%88%E4%BE%8B/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:51:25.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="天穹飞控项目"><a href="#天穹飞控项目" class="headerlink" title="天穹飞控项目"></a>天穹飞控项目</h3><p>将模块细分非常细致值得嵌入式借鉴</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">SRC# tree</span><br><span class="line">.</span><br><span class="line">├── CONTROL</span><br><span class="line">│   ├── flightControl.c</span><br><span class="line">│   ├── flightControl.h</span><br><span class="line">│   ├── missionControl.c</span><br><span class="line">│   ├── missionControl.h</span><br><span class="line">│   ├── motor.c</span><br><span class="line">│   ├── motor.h</span><br><span class="line">│   ├── rc.c</span><br><span class="line">│   ├── rc.h</span><br><span class="line">│   ├── safeControl.c</span><br><span class="line">│   ├── safeControl.h</span><br><span class="line">│   ├── userControl.c</span><br><span class="line">│   ├── userControl.h</span><br><span class="line">│   ├── waypointControl.c</span><br><span class="line">│   └── waypointControl.h</span><br><span class="line">├── DRIVER</span><br><span class="line">│   ├── board.c</span><br><span class="line">│   ├── board.h</span><br><span class="line">│   ├── boardConfigBlueSkyV3.h</span><br><span class="line">│   ├── drv_adc.c</span><br><span class="line">│   ├── drv_adc.h</span><br><span class="line">│   ├── drv_can.c</span><br><span class="line">│   ├── drv_can.h</span><br><span class="line">│   ├── drv_flash.c</span><br><span class="line">│   ├── drv_flash.h</span><br><span class="line">│   ├── drv_i2c_soft.c</span><br><span class="line">│   ├── drv_i2c_soft.h</span><br><span class="line">│   ├── drv_ppm.c</span><br><span class="line">│   ├── drv_ppm.h</span><br><span class="line">│   ├── drv_pwm.c</span><br><span class="line">│   ├── drv_pwm.h</span><br><span class="line">│   ├── drv_sbus.c</span><br><span class="line">│   ├── drv_sbus.h</span><br><span class="line">│   ├── drv_spi.c</span><br><span class="line">│   ├── drv_spi.h</span><br><span class="line">│   ├── drv_usart.c</span><br><span class="line">│   ├── drv_usart.h</span><br><span class="line">│   ├── drv_usb.c</span><br><span class="line">│   └── drv_usb.h</span><br><span class="line">├── LOG</span><br><span class="line">│   ├── logger.c</span><br><span class="line">│   ├── logger.h</span><br><span class="line">│   ├── ulog.c</span><br><span class="line">│   ├── ulog.h</span><br><span class="line">│   ├── ulog_data.c</span><br><span class="line">│   └── ulog_data.h</span><br><span class="line">├── MATH</span><br><span class="line">│   ├── LevenbergMarquardt.c</span><br><span class="line">│   ├── LevenbergMarquardt.h</span><br><span class="line">│   ├── declination.c</span><br><span class="line">│   ├── declination.h</span><br><span class="line">│   ├── kalman3.c</span><br><span class="line">│   ├── kalman3.h</span><br><span class="line">│   ├── kalmanVel.c</span><br><span class="line">│   ├── kalmanVel.h</span><br><span class="line">│   ├── lowPassFilter.c</span><br><span class="line">│   ├── lowPassFilter.h</span><br><span class="line">│   ├── mathTool.c</span><br><span class="line">│   ├── mathTool.h</span><br><span class="line">│   ├── matrix3.c</span><br><span class="line">│   ├── matrix3.h</span><br><span class="line">│   ├── matrix6.c</span><br><span class="line">│   ├── matrix6.h</span><br><span class="line">│   ├── pid.c</span><br><span class="line">│   ├── pid.h</span><br><span class="line">│   ├── quaternion.c</span><br><span class="line">│   ├── quaternion.h</span><br><span class="line">│   ├── rotation.c</span><br><span class="line">│   ├── rotation.h</span><br><span class="line">│   ├── vector3.c</span><br><span class="line">│   └── vector3.h</span><br><span class="line">├── MESSAGE</span><br><span class="line">│   ├── bsklink.c</span><br><span class="line">│   ├── bsklink.h</span><br><span class="line">│   ├── bsklinkDecode.c</span><br><span class="line">│   ├── bsklinkDecode.h</span><br><span class="line">│   ├── bsklinkSend.c</span><br><span class="line">│   ├── bsklinkSend.h</span><br><span class="line">│   ├── mavlinkDecode.c</span><br><span class="line">│   ├── mavlinkDecode.h</span><br><span class="line">│   ├── mavlinkNotice.c</span><br><span class="line">│   ├── mavlinkNotice.h</span><br><span class="line">│   ├── mavlinkParam.c</span><br><span class="line">│   ├── mavlinkParam.h</span><br><span class="line">│   ├── mavlinkSend.c</span><br><span class="line">│   ├── mavlinkSend.h</span><br><span class="line">│   ├── message.c</span><br><span class="line">│   └── message.h</span><br><span class="line">├── MODULE</span><br><span class="line">│   ├── 2smpb.c</span><br><span class="line">│   ├── 2smpb.h</span><br><span class="line">│   ├── battery.c</span><br><span class="line">│   ├── battery.h</span><br><span class="line">│   ├── icm20602.c</span><br><span class="line">│   ├── icm20602.h</span><br><span class="line">│   ├── icm20689.c</span><br><span class="line">│   ├── icm20689.h</span><br><span class="line">│   ├── ist8310.c</span><br><span class="line">│   ├── ist8310.h</span><br><span class="line">│   ├── mmc3630.c</span><br><span class="line">│   ├── mmc3630.h</span><br><span class="line">│   ├── module.c</span><br><span class="line">│   ├── module.h</span><br><span class="line">│   ├── mpu6000.c</span><br><span class="line">│   ├── mpu6000.h</span><br><span class="line">│   ├── mpu6500.c</span><br><span class="line">│   ├── mpu6500.h</span><br><span class="line">│   ├── ms5611.c</span><br><span class="line">│   ├── ms5611.h</span><br><span class="line">│   ├── qmc5883.c</span><br><span class="line">│   ├── qmc5883.h</span><br><span class="line">│   ├── rgb.c</span><br><span class="line">│   ├── rgb.h</span><br><span class="line">│   ├── ublox.c</span><br><span class="line">│   └── ublox.h</span><br><span class="line">├── NAVIGATION</span><br><span class="line">│   ├── ahrs.c</span><br><span class="line">│   ├── ahrs.h</span><br><span class="line">│   ├── ahrsAux.c</span><br><span class="line">│   ├── ahrsAux.h</span><br><span class="line">│   ├── navigation.c</span><br><span class="line">│   └── navigation.h</span><br><span class="line">├── SENSOR</span><br><span class="line">│   ├── accelerometer.c</span><br><span class="line">│   ├── accelerometer.h</span><br><span class="line">│   ├── barometer.c</span><br><span class="line">│   ├── barometer.h</span><br><span class="line">│   ├── gps.c</span><br><span class="line">│   ├── gps.h</span><br><span class="line">│   ├── gyroscope.c</span><br><span class="line">│   ├── gyroscope.h</span><br><span class="line">│   ├── magnetometer.c</span><br><span class="line">│   ├── magnetometer.h</span><br><span class="line">│   ├── sensor.c</span><br><span class="line">│   └── sensor.h</span><br><span class="line">├── SYSTEM</span><br><span class="line">│   ├── faultDetect.c</span><br><span class="line">│   ├── faultDetect.h</span><br><span class="line">│   ├── flightStatus.c</span><br><span class="line">│   ├── flightStatus.h</span><br><span class="line">│   ├── parameter.c</span><br><span class="line">│   └── parameter.h</span><br><span class="line">├── TASK</span><br><span class="line">│   ├── TaskConfig.h</span><br><span class="line">│   ├── control_task.c</span><br><span class="line">│   ├── control_task.h</span><br><span class="line">│   ├── log_task.c</span><br><span class="line">│   ├── log_task.h</span><br><span class="line">│   ├── messageQueue.c</span><br><span class="line">│   ├── messageQueue.h</span><br><span class="line">│   ├── message_task.c</span><br><span class="line">│   ├── message_task.h</span><br><span class="line">│   ├── module_task.c</span><br><span class="line">│   ├── module_task.h</span><br><span class="line">│   ├── navigation_task.c</span><br><span class="line">│   ├── navigation_task.h</span><br><span class="line">│   ├── sensor_task.c</span><br><span class="line">│   └── sensor_task.h</span><br><span class="line">└── main.c</span><br></pre></td></tr></table></figure><h3 id="待添加……"><a href="#待添加……" class="headerlink" title="待添加……"></a>待添加……</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;天穹飞控项目&quot;&gt;&lt;a href=&quot;#天穹飞控项目&quot; class=&quot;headerlink&quot; title=&quot;天穹飞控项目&quot;&gt;&lt;/a&gt;天穹飞控项目&lt;/h3&gt;&lt;p&gt;将模块细分非常细致值得嵌入式借鉴&lt;/p&gt;
&lt;figure class=&quot;highlight plaintex</summary>
      
    
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/categories/%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>cmake配置模板</title>
    <link href="https://github.com/peitianyu/blog.git/2021/10/19/cmake%E6%A8%A1%E6%9D%BF/"/>
    <id>https://github.com/peitianyu/blog.git/2021/10/19/cmake%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-10-19T04:30:12.000Z</published>
    <updated>2021-10-24T05:51:46.009Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Cmake教程"><a href="#Cmake教程" class="headerlink" title="Cmake教程"></a>Cmake教程</h3><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h4><p><a href="https://www.hahack.com/codes/cmake/">CMake 入门实战 | HaHack</a></p><h3 id="Cmake文件结构"><a href="#Cmake文件结构" class="headerlink" title="Cmake文件结构"></a>Cmake文件结构</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@LAPTOP-49LFJ4NT:/root/cmake# tree</span><br><span class="line">.</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── build</span><br><span class="line">├── include</span><br><span class="line">│   └── func.h</span><br><span class="line">└── src</span><br><span class="line">    ├── func.cpp</span><br><span class="line">    ├── main.cpp</span><br><span class="line">    └── shell.sh</span><br></pre></td></tr></table></figure><h3 id="shell-sh"><a href="#shell-sh" class="headerlink" title="shell.sh"></a>shell.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 由于主要在src文件夹下工作，因此在此建一个shell脚本方便编译</span></span><br><span class="line">cd .. &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make -j &amp;&amp; ./main</span><br></pre></td></tr></table></figure><h3 id="CmakeLists-txt"><a href="#CmakeLists-txt" class="headerlink" title="CmakeLists.txt"></a>CmakeLists.txt</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定cmake版本</span></span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.0</span>)</span><br><span class="line"><span class="comment"># 工程名</span></span><br><span class="line"><span class="keyword">project</span>(main)</span><br><span class="line"></span><br><span class="line"><span class="comment">#cmake的c++设置</span></span><br><span class="line"><span class="comment"># 告知當前使用的是交叉編譯方式，必須配置</span></span><br><span class="line"><span class="keyword">SET</span>(CMAKE_SYSTEM_NAME Linux)</span><br><span class="line"><span class="keyword">SET</span>(CMAKE_C_COMPILER <span class="string">&quot;arm-linux-gnueabihf-gcc&quot;</span>)</span><br><span class="line"><span class="keyword">SET</span>(CMAKE_CXX_COMPILER <span class="string">&quot;arm-linux-gnueabihf-g++&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置编译选项</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_CXX_FLAGS&#125; -O0 -Wall -pthread -std=c++11 -fPIC &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加.h文件</span></span><br><span class="line"><span class="keyword">include_directories</span>(<span class="keyword">include</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加.cpp文件</span></span><br><span class="line"><span class="keyword">aux_source_directory</span>(src SRC_LIST)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出调试信息</span></span><br><span class="line"><span class="keyword">message</span>(<span class="string">&quot;src :$&#123;SRC_LIST&#125; &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行文件</span></span><br><span class="line"><span class="keyword">add_executable</span>(main <span class="variable">$&#123;SRC_LIST&#125;</span> )</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在src文件夹下运行shell.sh</span></span><br><span class="line">./shell</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Cmake教程&quot;&gt;&lt;a href=&quot;#Cmake教程&quot; class=&quot;headerlink&quot; title=&quot;Cmake教程&quot;&gt;&lt;/a&gt;Cmake教程&lt;/h3&gt;&lt;h4 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/categories/%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="模板" scheme="https://github.com/peitianyu/blog.git/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
