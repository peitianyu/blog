<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>某飞行员的随笔</title>
  
  
  <link href="https://peitianyu.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://peitianyu.github.io/blog/"/>
  <updated>2021-11-11T11:55:51.392Z</updated>
  <id>https://peitianyu.github.io/blog/</id>
  
  <author>
    <name>某飞行员</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>USBCAN/CANalyst-II</title>
    <link href="https://peitianyu.github.io/blog/2021/11/11/USBCAN/"/>
    <id>https://peitianyu.github.io/blog/2021/11/11/USBCAN/</id>
    <published>2021-11-11T04:30:12.000Z</published>
    <updated>2021-11-11T11:55:51.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/muyoufansem/article/details/117955581?ops_request_misc=&request_id=&biz_id=102&utm_term=canalyst&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-117955581.pc_search_mgc_flag&spm=1018.2226.3001.4187">(完整版)Python读取CANalyst-II分析仪(创芯科技)接口函数_蜡笔小新历险记的博客-CSDN博客_创芯科技can分析仪驱动</a></p><p><a href="https://blog.csdn.net/qq_38766896/article/details/109404097?ops_request_misc=%7B%22request_id%22:%22163642380516780264058809%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163642380516780264058809&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-109404097.pc_search_mgc_flag&utm_term=canalyst-ii+linux&spm=1018.2226.3001.4187">Ubuntu16.04 （ROS）下通过CAN分析仪（USBCAN/CANalyst-II）调试无人车助力转向电机（1）_秋名山的过客-CSDN博客</a></p><p><a href="http://www.gcgd.net/newsinfo_726.html">USBCAN在Linux系统下使用说明 (gcgd.net)</a></p><p><a href="https://blog.csdn.net/qq_41545537/article/details/106714246?ops_request_misc=%7B%22request_id%22:%22163607238916780271515211%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163607238916780271515211&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-106714246.pc_search_mgc_flag&utm_term=ubuntucan%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85&spm=1018.2226.3001.4187">ubuntu下研华工控机CAN卡驱动的安装与测试_星辰和大海都需要门票的博客-CSDN博客</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>介绍两款使用过的<code>usb</code>转<code>can</code>的使用方法</p><p>一款是广成科技的<code>USBCAN-I PRO</code><a href="http://www.gcgd.net/tecrjlist.html">资料下载 (gcgd.net)</a></p><p>一款是创芯科技的<code>CANalyst</code><a href="https://www.zhcxgd.com/ZLXZ.html">珠海创芯科技有限公司 - 珠海创芯科技 (zhcxgd.com)</a></p><h1 id="软件安装与使用"><a href="#软件安装与使用" class="headerlink" title="软件安装与使用"></a>软件安装与使用</h1><h2 id="USBCAN"><a href="#USBCAN" class="headerlink" title="USBCAN:"></a>USBCAN:</h2><p><a href="http://www.gcgd.net/newsinfo_388.html">沈阳广成科技USBCAN系列产品驱动安装及ECANTools软件使用方法 (gcgd.net)</a></p><p><a href="https://pan.baidu.com/s/10R7zou8yxzarjlwlJkeN1A#list/path=%2FGC-USBCAN-----%E7%82%B9%E5%87%BB%E8%BF%9B%E5%85%A5%E6%96%87%E4%BB%B6%E5%A4%B9%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%87%E4%BB%B6">GC-USBCAN—–点击进入文件夹选择需要下载的文件_免费高速下载|百度网盘-分享无限制 (baidu.com)</a></p><h2 id="CANalyst"><a href="#CANalyst" class="headerlink" title="CANalyst:"></a>CANalyst:</h2><p><a href="https://blog.csdn.net/muyoufansem/article/details/117955581?ops_request_misc=&request_id=&biz_id=102&utm_term=canalyst&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-3-117955581.pc_search_mgc_flag&spm=1018.2226.3001.4187">(完整版)Python读取CANalyst-II分析仪(创芯科技)接口函数_蜡笔小新历险记的博客-CSDN博客_创芯科技can分析仪驱动</a></p><h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><h2 id="建议采用官方例程至少不会出错"><a href="#建议采用官方例程至少不会出错" class="headerlink" title="!建议采用官方例程至少不会出错"></a>!建议采用官方例程至少不会出错</h2><h2 id="这里推荐两个例程可以验证学习"><a href="#这里推荐两个例程可以验证学习" class="headerlink" title="这里推荐两个例程可以验证学习"></a>这里推荐两个例程可以验证学习</h2><p><a href="https://github.com/VincentCheungM/ESR_canalyst_ros">VincentCheungM/ESR_canalyst_ros: A warped ROS driver for CANalyst-II and ESR Radar (github.com)</a></p><p><a href="https://github.com/Andy-jg/RaspberryCanalyst-2">Andy-jg/RaspberryCanalyst-2: linux use the canalyst-2 (github.com)</a></p><h1 id="注意"><a href="#注意" class="headerlink" title="!注意"></a>!注意</h1><p>由于can驱动使用时每次都需要<code>sudo</code>,可以加配置,这样就不需要每次都<code>sudo</code>了</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/udev/rules.d/99-myusb.rules</span><br></pre></td></tr></table></figure><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ACTION==&quot;add&quot;,SUBSYSTEMS==&quot;usb&quot;, ATTRS&#123;idVendor&#125;==&quot;04d8&quot;, ATTRS&#123;idProduct&#125;==&quot;0053&quot;,</span><br><span class="line">GROUP=&quot;users&quot;, MODE=&quot;0777&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/muyoufansem/article/details/1</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="tool" scheme="https://peitianyu.github.io/blog/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>linux解压</title>
    <link href="https://peitianyu.github.io/blog/2021/11/11/linux%E8%A7%A3%E5%8E%8B/"/>
    <id>https://peitianyu.github.io/blog/2021/11/11/linux%E8%A7%A3%E5%8E%8B/</id>
    <published>2021-11-11T04:30:12.000Z</published>
    <updated>2021-11-11T11:25:51.951Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/scanf_linux/article/details/90382491?ops_request_misc=%7B%22request_id%22:%22163644518016780271536349%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163644518016780271536349&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-90382491.pc_search_mgc_flag&utm_term=linux%E8%A7%A3%E5%8E%8Btar.gz&spm=1018.2226.3001.4187">Linux解压.tgz，.tar.gz文件（tar详细参数使用介绍）_echo-CSDN博客_linux解压.tar.gz文件</a></p><h1 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf jpg.tar *.jpg //将目录里所有jpg文件打包成jpg.tar </span><br><span class="line">tar -czf jpg.tar.gz *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</span><br><span class="line">tar -cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</span><br><span class="line">tar -Jcvf [目标文件名].tar.xz [原文件名/目录名]</span><br><span class="line">tar -cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</span><br><span class="line">rar a jpg.rar *.jpg //rar格式的压缩，需要先下载 rar for linux</span><br><span class="line">zip jpg.zip *.jpg //zip格式的压缩，需要先下载 zip for linux</span><br></pre></td></tr></table></figure><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf file.tar //解压 tar包</span><br><span class="line">tar -xzvf file.tar.gz //解压tar.gz</span><br><span class="line">tar -xjvf file.tar.bz2   //解压 tar.bz2</span><br><span class="line">tar -xZvf file.tar.Z   //解压tar.Z</span><br><span class="line">tar -Jxvf file.tar.xz</span><br><span class="line">unrar e file.rar //解压rar</span><br><span class="line">unzip file.zip //解压zip</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*.tar 用 tar -xvf 解压</span><br><span class="line">*.gz 用 gzip -d或者gunzip 解压</span><br><span class="line">*.tar.gz和*.tgz 用 tar -xzf 解压</span><br><span class="line">*.bz2 用 bzip2 -d或者用bunzip2 解压</span><br><span class="line">*.tar.bz2用tar -xjf 解压</span><br><span class="line">*.Z 用 uncompress 解压</span><br><span class="line">*.tar.Z 用tar -xZf 解压</span><br><span class="line">*.rar 用 unrar e解压</span><br><span class="line">*.zip 用 unzip 解压</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/scanf_linux/article/details/9</summary>
      
    
    
    
    <category term="linux" scheme="https://peitianyu.github.io/blog/categories/linux/"/>
    
    
    <category term="linux" scheme="https://peitianyu.github.io/blog/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>cJSON</title>
    <link href="https://peitianyu.github.io/blog/2021/11/10/cJSON/"/>
    <id>https://peitianyu.github.io/blog/2021/11/10/cJSON/</id>
    <published>2021-11-10T04:30:12.000Z</published>
    <updated>2021-11-11T11:02:04.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/Mculover666/article/details/103796256?ops_request_misc=%7B%22request_id%22:%22163610505416780261970843%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163610505416780261970843&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103796256.pc_search_mgc_flag&utm_term=cjson&spm=1018.2226.3001.4187">(65条消息) cJSON使用详细教程 | 一个轻量级C语言JSON解析器_Mculover666的博客（嵌入式_)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/Mculover666/article/details/1</summary>
      
    
    
    
    <category term="cpp" scheme="https://peitianyu.github.io/blog/categories/cpp/"/>
    
    
    <category term="cpp" scheme="https://peitianyu.github.io/blog/tags/cpp/"/>
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>电路设计_稚晖君机械臂</title>
    <link href="https://peitianyu.github.io/blog/2021/11/08/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E7%A8%9A%E6%99%96%E5%90%9B%E6%9C%BA%E6%A2%B0%E8%87%82%E5%AD%A6%E4%B9%A0/"/>
    <id>https://peitianyu.github.io/blog/2021/11/08/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E7%A8%9A%E6%99%96%E5%90%9B%E6%9C%BA%E6%A2%B0%E8%87%82%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-11-08T04:30:12.000Z</published>
    <updated>2021-11-11T11:13:57.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://github.com/peng-zhihui/Dummy-Robot">peng-zhihui/Dummy-Robot: 我的超迷你机械臂机器人项目。 (github.com)</a></p><h1 id="电源部分"><a href="#电源部分" class="headerlink" title="电源部分:"></a>电源部分:</h1><p>采用<code>TPS61040DBV</code>芯片实现的<code>5v</code>转<code>9v</code>电路,该芯片支持<code>1.8v</code>到<code>6v</code>输入,高达<code>28v</code>输出,同时还支持<code>400ma</code>的电流输出,具体可参考:</p><p><a href="https://www.ti.com/cn/lit/ds/symlink/tps61040.pdf?ts=1636365714478">TPS6104x Low-Power DC-DC Boost Converter in SOT-23 and WSON Packages datasheet (Rev. J) (ti.com)</a></p><p><img src="https://i.loli.net/2021/11/08/S7a8ycYL5rbvmOe.png" alt="image-20211108201917859.png"></p><p><code>LP2992</code>线性稳压器,输入<code>2.2v</code>到<code>16v</code>输出<code>1.5v</code>到<code>5v</code>,指定250毫安输出电流</p><p><a href="https://www.ti.com/cn/lit/ds/symlink/lp2992.pdf?ts=1636360611776">LP2992 Micropower 250-mA Low-Noise Ultra-Low-Dropout Regulator in SOT-23 and WSON Packages Designed for Use With Very Low-ESR Output Capacitors datasheet (Rev. J) (ti.com)</a></p><p><img src="https://i.loli.net/2021/11/08/Pc1Nxinl3avWTtG.png" alt="image-20211108202522586.png"></p><p><code>ME3116</code> 是一款内部集成了 <code>MOSFET</code> 的异步整流降压型 稳压器。它在很宽的输入电压范围内（<code>4.75V-40V</code>）能够提供 高达 <code>1A</code> 的负载能力。</p><p><img src="https://i.loli.net/2021/11/08/nWz2I4P8y5dTol3.png" alt="image-20211108203139049.png"></p><p><code>ME6206</code>:降压稳压器,高精度输出电压：<code>±2%</code>   输出电压：<code>1.5V~5.0V</code>(步长 <code>0.1V</code>)  最大工作电压：<code>6V</code> 带载能力强：当 <code>Vin=4.3V</code> 且 <code>Vout=3.3V</code> 时 <code>Iout=300mA</code>  极低的输入输出电压差： <code>0.2V</code> at <code>90mA</code> and <code>0.40V</code> at <code>200mA</code></p><p><img src="https://i.loli.net/2021/11/08/XljkeHb6N1pcW4y.png" alt="image-20211108204012844.png"></p><p>这里使用了<code>ss54</code>实现防反接,<code>sy8303</code>降压型<code>dc-dc</code>芯片</p><p><img src="https://i.loli.net/2021/11/11/POs7cb8Yxo3TvEU.png" alt="image-20211111191014461.png"></p><h1 id="自动下载电路"><a href="#自动下载电路" class="headerlink" title="自动下载电路"></a>自动下载电路</h1><p>采用<code>cp2101</code>usb转串口芯片,通过三极管,实现串口自动下载</p><p><img src="https://i.loli.net/2021/11/11/U3pDMn8Qt1cTLvl.png" alt="image-20211111190423177.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/peng-zhihui/Dummy-Robot&quot;&gt;peng-zh</summary>
      
    
    
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/categories/sch/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/tags/sch/"/>
    
  </entry>
  
  <entry>
    <title>电路设计_常见电路</title>
    <link href="https://peitianyu.github.io/blog/2021/11/08/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E5%B8%B8%E8%A7%81%E7%94%B5%E8%B7%AF/"/>
    <id>https://peitianyu.github.io/blog/2021/11/08/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E5%B8%B8%E8%A7%81%E7%94%B5%E8%B7%AF/</id>
    <published>2021-11-08T04:30:12.000Z</published>
    <updated>2021-11-09T10:17:19.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="驱动输出电路"><a href="#驱动输出电路" class="headerlink" title="驱动输出电路"></a>驱动输出电路</h1><p><img src="https://i.loli.net/2021/11/08/IcfBqFezTlgAm9b.png" alt="image-20211108152310283.png"></p><p>这里需要注意的是,<code>uln2803</code>是一种<code>npn</code>输出,输出低电平,因此在其输出端会有上拉电阻.在<code>uln2803</code>左侧接<code>gnd</code>右侧接<code>24v</code>.</p><p>这里的<code>74hct245</code>为<code>三态输出八路收发器</code>作用是增加单片机的驱动能力.</p><p>将同样用<code>74hct245</code>此电路改为<code>pnp</code>型输出,需要将<code>uln2803</code>换为<code>tbd62783</code>,需要注意输出端需要接<code>下拉电阻</code>.</p><p>**!注意:**由于改驱动芯片<code>uln2803</code>输出最大电流为<code>500ma</code>可能出现烧芯片的情况,可以加一个<code>500ma</code>熔断</p><h1 id="放大电路-opa2333"><a href="#放大电路-opa2333" class="headerlink" title="放大电路(opa2333)"></a>放大电路(opa2333)</h1><p><img src="https://i.loli.net/2021/11/08/cdPVFXozHa5hrxR.png" alt="image-20211108185457678.png"></p><p>这里通过<code>R64</code>,<code>R65</code>阻值的变化来实现放大,具体详细可参考:<a href="https://blog.csdn.net/cyousui/article/details/82936155">(61条消息) 基本运算放大器原理_小神兵之技术篇-CSDN博客_运算放大器</a></p><p>值得注意的是,由于是轨到轨的放大电路,输入<code>24v</code>,最大放大电压同样也可以达到<code>24v</code></p><h1 id="模拟量采样电路"><a href="#模拟量采样电路" class="headerlink" title="模拟量采样电路"></a>模拟量采样电路</h1><p><img src="https://i.loli.net/2021/11/08/PRZG7qv6kX3yQA9.png" alt="image-20211108191319100.png"></p><p>这里两个二极管用以防过压,电压大于<code>3.3v</code>小于<code>26.7v</code>时直接通过<code>+3.3v</code>,输出,而大于<code>26.7v</code>击穿二极管,直接导地.</p><p><img src="https://i.loli.net/2021/11/08/F1qsv4pESJwMUbN.png" alt="image-20211108191642356.png"></p><p>模拟量采集,还需要注意一点就是,对于电源要进行滤波处理,使电源信号更干净</p><h1 id="普通光耦-TLP290-4-与单向高速光耦-PC4D10"><a href="#普通光耦-TLP290-4-与单向高速光耦-PC4D10" class="headerlink" title="普通光耦(TLP290-4)与单向高速光耦(PC4D10)"></a>普通光耦(TLP290-4)与单向高速光耦(PC4D10)</h1><p><img src="https://i.loli.net/2021/11/08/Z6cxwFV4NLpevJK.png" alt="image-20211108192255515.png"></p><p><code>TLP290-4</code>为一种普通光耦,可以实现双向导通,这里原理图<code>左边部分有些出入</code>需要注意一下,输出为<code>npn</code>型输出,注意上拉电阻</p><p><img src="https://i.loli.net/2021/11/08/lESfhw24NsPrKpc.png" alt="image-20211108191804168.png"></p><p><code>pc4d10</code>为告诉光耦,实现的<code>npn</code>型输出,所以注意需要有上拉电阻.</p><h1 id="防反接电路"><a href="#防反接电路" class="headerlink" title="防反接电路"></a>防反接电路</h1><p>参考网址:<a href="https://blog.csdn.net/cgy8919/article/details/90909859?ops_request_misc=%7B%22request_id%22:%22163645288216780264054670%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163645288216780264054670&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-90909859.pc_search_mgc_flag&utm_term=%E5%8D%95%E7%89%87%E6%9C%BA%E9%98%B2%E5%8F%8D%E6%8E%A5%E7%94%B5%E8%B7%AF&spm=1018.2226.3001.4187">(62条消息) 直流电源输入防反接保护电路总结_cgy8919的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;驱动输出电路&quot;&gt;&lt;a href=&quot;#驱动输出电路&quot; class=&quot;headerlink&quot; title=&quot;驱动输出电路&quot;&gt;&lt;/a&gt;驱动输出电路&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/08/IcfBqFezTlgAm9</summary>
      
    
    
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/categories/sch/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/tags/sch/"/>
    
  </entry>
  
  <entry>
    <title>树莓派串口通信</title>
    <link href="https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"/>
    <id>https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</id>
    <published>2021-11-06T04:30:12.000Z</published>
    <updated>2021-11-06T07:46:11.413Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/benchuspx/article/details/112571880?ops_request_misc=%7B%22request_id%22:%22163054521616780274150518%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163054521616780274150518&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-112571880.pc_search_insert_download&utm_term=%E6%A0%91%E8%8E%93%E6%B4%BEubuntu+20%E5%85%B3%E9%97%AD%E4%B8%B2%E5%8F%A3%E7%BB%88%E7%AB%AF%E8%B0%83%E8%AF%95&spm=1018.2226.3001.4187">树莓派4b ubuntu系统开启串口_benchuspx的博客-CSDN博客</a></p><p><a href="https://www.pianshen.com/article/3825828971/">树莓派4B如何使用串口与外部进行通信 - 程序员大本营 (pianshen.com)</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>树莓派原本的抽是用于<strong>串口控制台</strong>的,即<code>/ttyAMA0</code>,且此硬件串口也与蓝牙连接到一块,因此需要将<strong>控制台</strong>与<strong>蓝牙</strong>关闭才能使用</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li><p><code>/boot/firmware/nobtcmd.tx</code>t里删除<code>console = /ttyAMA 921600</code>从而禁用串口控制台.这个<code>txt文件</code>也可以用读卡器把sd卡插到windows系统里在<code>system-boot</code>里找到</p></li><li><p><code>/boot/firmware/config.txt</code> 里设置<code>enable_uart=1</code>（默认就是）.如果=0表示启用minicom串口，而不是这个硬件串口.</p></li><li><p><code>/boot/firmware/config.txt</code> 里加入一行<code>dtoverlay=disable-bt</code>从而禁用蓝牙.</p></li><li><p><code>sudo systemctl disable bluetooth</code>…… 禁用掉和蓝牙有关的开机启动项.直到桌面不再显示蓝牙标志，但是还有<code>/ttyAMA0</code>存在.</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/benchuspx/article/details/112</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>树莓派备份</title>
    <link href="https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A4%87%E4%BB%BD/"/>
    <id>https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A4%87%E4%BB%BD/</id>
    <published>2021-11-06T04:30:12.000Z</published>
    <updated>2021-11-06T13:10:22.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://zhuanlan.zhihu.com/p/299844978?utm_source=wechat_session">收藏！最简单的树莓派系统备份方法！ - 知乎 (zhihu.com)</a></p><p><a href="https://post.smzdm.com/p/apzkgne7/">树莓派学习笔记 篇四：树莓派4B 的系统备份方法大全（全卡+压缩备份）_其他智能设备_什么值得买 (smzdm.com)</a></p><p><a href="https://blog.csdn.net/sinat_16643223/article/details/109006150">烧写之前备份过的树莓派镜像到SD卡，证明这样备份恢复是可行的！！！！！！！_TYINY的博客-CSDN博客</a></p><h1 id="最简单的方式"><a href="#最简单的方式" class="headerlink" title="最简单的方式"></a>最简单的方式</h1><p><code>win10</code>下新建一个<code>.img</code>格式文件,通过<code>Win32DiskImager</code>,<code>read</code>插入卡的系统,<code>read</code>完就备份好了</p><p><img src="https://qnam.smzdm.com/201912/08/5ded02bcc031f2090.jpg_e1080.jpg" alt="树莓派4B 的系统备份方法大全（全卡+压缩备份）"></p><h1 id="脚本方式-推荐"><a href="#脚本方式-推荐" class="headerlink" title="脚本方式(推荐)"></a>脚本方式(推荐)</h1><p><a href="https://github.com/BigBubbleGum/RaspberryBackup"> 在Linux系统中一键备份树莓派系统SD卡的脚本 (github.com)</a></p><ul><li>下载下来脚本<code>rpi-backup.sh</code>放入到<code>Linux</code>系统</li><li>插入需备份的树莓派系统,用<code>df -h</code>命令查询SD卡设备名</li><li>运行<code>sudo chmod +x rpi-backup.sh</code>后,运行<code>./rpi-backup.sh /dev/sdb1 /dev/sdb2</code></li><li>注意第一个参数是树莓派SD卡<code>/boot</code>分区的设备名：/dev/sdb1，第二个参数是<code>/</code>分区的设备名：/dev/sdb2，视情况修改）</li><li>终 img 文件会生成在<code>~/backupimg/</code>文件夹下</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/299844978?utm_source=w</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装Ubuntu18_server</title>
    <link href="https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85ubuntu18_server/"/>
    <id>https://peitianyu.github.io/blog/2021/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85ubuntu18_server/</id>
    <published>2021-11-06T04:30:12.000Z</published>
    <updated>2021-11-07T03:49:11.896Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/weixin_36628778/article/details/105056549?ops_request_misc=%7B%22request_id%22:%22163048418216780264057617%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=163048418216780264057617&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-105056549.pc_search_insert_download&utm_term=ubuntu18.04+server+wlan0&spm=1018.2226.3001.4187">树莓派raspberry 安装ubuntu18.04 server + desktop + ros1_越来越胖了_mengleijin的博客-CSDN博客</a></p><p><a href="https://www.freesion.com/article/3758800537/">树莓派4b安装带桌面的ubuntu18.04 server和ROS melodic系统 - 灰信网（软件开发博客聚合） (freesion.com)</a></p><h1 id="img镜像下载"><a href="#img镜像下载" class="headerlink" title="img镜像下载"></a>img镜像下载</h1><p><a href="https://www.lxx1.com/3779">树莓派操作系统镜像下载地址</a></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cdimage/releases/bionic/release/ubuntu-18.04.5-preinstalled-server-arm64%2Braspi4.img.xz">ubuntu18_server</a></p><h1 id="将系统烧入SD卡"><a href="#将系统烧入SD卡" class="headerlink" title="将系统烧入SD卡"></a>将系统烧入SD卡</h1><p>使用<strong>win32diskimager</strong>或者<strong>balenaetcher</strong>烧录进去</p><p><img src="https://img-blog.csdnimg.cn/20210507104309422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzIxNTcwMDI1,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200603191826555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NDU4NDYx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="启动树莓派"><a href="#启动树莓派" class="headerlink" title="启动树莓派"></a>启动树莓派</h1><p>将SD卡插入树莓派，并为树莓派连接好电源，显示器，鼠标，键盘，网线。启动树莓派，默认用户名密码都是<code>ubuntu</code>，之后需要马上修改密码，按提示操作即可。</p><h1 id="连网"><a href="#连网" class="headerlink" title="连网"></a>连网</h1><p>可以参考:</p><p><a href="https://blog.csdn.net/zyr920425/article/details/93351457">Ubuntu Server 18.04 连接 WIFI_zyr920425的博客-CSDN博客</a></p><p>编辑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/netplan/xxxxxxx.yaml</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network:</span><br><span class="line">    ethernets:</span><br><span class="line">        eth0:</span><br><span class="line">            dhcp4: false</span><br><span class="line">            addresses: [192.168.10.135/24]</span><br><span class="line">    wifis:</span><br><span class="line">        wlan0:</span><br><span class="line">            access-points:</span><br><span class="line">                &quot;10X&quot;:</span><br><span class="line">                    password: 123456787</span><br><span class="line">            dhcp4: true</span><br></pre></td></tr></table></figure><h1 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano  /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>参考:<a href="https://blog.csdn.net/Meteor_s/article/details/81301252">Ubuntu–更换软件源_星迹-CSDN博客_乌班图软件源</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h1 id="SSH连接"><a href="#SSH连接" class="headerlink" title="SSH连接"></a>SSH连接</h1><p>网线连接好,通过<code>ip a</code>查看是否配置好,然后在物理机上尝试<code>ping</code>通后连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh.exe ubuntu@192.168.xx.xx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_36628778/article/detai</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>电路设计_最小系统设计</title>
    <link href="https://peitianyu.github.io/blog/2021/11/06/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
    <id>https://peitianyu.github.io/blog/2021/11/06/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E6%9C%80%E5%B0%8F%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</id>
    <published>2021-11-06T04:30:12.000Z</published>
    <updated>2021-11-08T06:22:13.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/little_ox/article/details/105056030">(60条消息) STM32最小系统设计_little_ox的博客-CSDN博客</a></p><h1 id="最小系统"><a href="#最小系统" class="headerlink" title="最小系统"></a>最小系统</h1><p>组成:<strong>主芯片</strong>,<strong>复位电路</strong>,<strong>时钟电路</strong>,<strong>电源电路</strong>,<strong>下载电路</strong></p><h2 id="主芯片"><a href="#主芯片" class="headerlink" title="主芯片"></a>主芯片</h2><p>根据自己需要的io数量,功能选择好主芯片</p><h2 id="复位电路-时钟电路-下载电路"><a href="#复位电路-时钟电路-下载电路" class="headerlink" title="复位电路,时钟电路,下载电路"></a>复位电路,时钟电路,下载电路</h2><p>由于低电平复位,因此可以通过上拉电阻实现,由于<strong>复位电路</strong>与<strong>时钟电路</strong>一般芯片都会提供参考电路或者查查资料都很容易找到,就不再赘述,<strong>下载电路</strong>的话直接<code>clk</code>,<code>dio</code>给他,通过<code>SWD</code>,或者<code>JTAG</code>下载,这里使用的时<code>SWD</code>下载</p><p><img src="https://i.loli.net/2021/11/06/uVUHSfX4Lt2Reiq.png" alt="image-20211106195658724.png"></p><p>**!注意:**一般芯片都会有电源滤波,因此在布线的过程中注意将电容尽量放的里芯片近些.</p><h2 id="晶振的选择"><a href="#晶振的选择" class="headerlink" title="晶振的选择"></a>晶振的选择</h2><p>有源晶振:自供电,有内部电路,精度会高些,当然价格也贵些</p><p>无源晶振:内部不供电,与芯片直接相连,精度差些,在对时钟要求没那么高的情况下一般够用</p><h2 id="电源电路"><a href="#电源电路" class="headerlink" title="电源电路"></a>电源电路</h2><p>比较麻烦的是电源电路,或者降压,或者稳压,根据需要实现.</p><p>这里提供一种从24v转3.3v的思路电源思路.这里使用<code>TPS5430</code>芯片实现的一种电源降压的方式,这里<code>D2</code>指的是<code>瞬态抑制</code>起到当电压超过24v(比如打火花)进来时,<code>D2</code>导通,24v直接接地,同事使用了F1保险丝做保护        </p><p><img src="https://i.loli.net/2021/11/06/OokdWnJcprP4uZV.png" alt="image-20211106200343212.png"></p><p><img src="https://i.loli.net/2021/11/06/SXDMrFs3iagZGBq.png" alt="image-20211106200412912.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/little_ox/article/details/105</summary>
      
    
    
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/categories/sch/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/tags/sch/"/>
    
  </entry>
  
  <entry>
    <title>电路设计_通讯设计</title>
    <link href="https://peitianyu.github.io/blog/2021/11/06/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E9%80%9A%E8%AE%AF%E8%AE%BE%E8%AE%A1/"/>
    <id>https://peitianyu.github.io/blog/2021/11/06/%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1_%E9%80%9A%E8%AE%AF%E8%AE%BE%E8%AE%A1/</id>
    <published>2021-11-06T04:30:12.000Z</published>
    <updated>2021-11-08T06:21:47.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CAN"><a href="#CAN" class="headerlink" title="CAN:"></a>CAN:</h1><p><img src="https://i.loli.net/2021/11/06/Cs8JxWr3kPG7efT.png" alt="image-20211106130338091-16361750226251.png"></p><p><img src="https://i.loli.net/2021/11/06/6BkYVPWyMIU5g1Z.png" alt="image-20211106133256690.png"></p><p>两张图用的都是<code>TJA1050</code>,速度<code>1Mbps</code>,不过后期的处理略有些不同,上图can信号分两路输出,而下图,为保护电路,加入了<code>fuse</code>(熔断器),<code>SMAJ30CA</code>(瞬态抑制二极管)</p><p><img src="https://i.loli.net/2021/11/06/tcjs9VvHAG8ENQX.png" alt="image-20211106140618661.png"></p><p>这张图用的是<code>max3051</code>3.3v供电,高速运行<code>1Mbps</code>,这里使用了<code>ACT45B</code>共模电感起<code>EMI</code>滤波的作用，用于抑制高速信号线产生的电磁波向外辐射发射.</p><h1 id="RS485"><a href="#RS485" class="headerlink" title="RS485"></a>RS485</h1><p><img src="https://i.loli.net/2021/11/06/NuSOBZ4Yldot6wp.png" alt="image-20211106141453916.png"></p><p><img src="https://i.loli.net/2021/11/06/T8zrX3fUBA4Slc2.png" alt="image-20211106141550298.png"></p><p>由于采用<code>3.3v</code>供电,使用芯片为<code>sp3485</code>,参考图二,<code>5v</code>供电可更换为<code>max485</code>,电路设计上也还是同样,图一,采用<code>熔断器</code>与<code>瞬态一直二极管</code>保护电路</p><p><img src="https://i.loli.net/2021/11/06/QHouRcwMjXm7fFh.png" alt="image-20211106142404847"></p><p>这张图就是<code>max485</code>实现的<code>RS485</code>电路,同样对于电路保护也采用熔断器与瞬态一直二极管,同时采用电容进行进一步滤波.这里发送接收通过<code>EN</code>控制,三极管做开关功能,<code>EN</code>为0时接收,为1时发送.</p><h1 id="232"><a href="#232" class="headerlink" title="232"></a>232</h1><p><img src="https://i.loli.net/2021/11/06/J8CwfLA7H1uErT4.png" alt="image-20211106143625304"></p><p>数据手册:</p><p><a href="https://www.ti.com/cn/lit/ds/symlink/max3232.pdf?ts=1636166679814">具有 ±15kV ESD 保护功能的 MAX3232 3V 至 5.5V 多通道 RS-232 线路驱动器和接收器 datasheet </a></p><p>布板参考:</p><p><img src="https://i.loli.net/2021/11/06/wghYLF1WtiadvNS.png" alt="image-20211106143955599.png"></p><h1 id="USB转串口"><a href="#USB转串口" class="headerlink" title="USB转串口"></a>USB转串口</h1><p><img src="https://i.loli.net/2021/11/06/oKLkuhrp9EUb43w.png" alt="image-20211106145617779.png"></p><p>这张图是type_c转串口的图,图中使用<code>CH340N</code>实现板子最小化,非常<strong>nice</strong></p><p>下面是他的开源链接:<a href="https://oshwhub.com/vcijj/TYPE-C-usbzhuai-chuan-kou">TYPE C usb转串口 - 立创EDA开源硬件平台 (oshwhub.com)</a></p><p>当然为了保护电路,我们也可以在上边加上<code>熔断</code>与<code>瞬时抑制二极管</code></p><h1 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h1><p><strong>参考渡鸦卡发版设计</strong></p><p><img src="https://i.loli.net/2021/11/06/u3pGfIP86yELD4F.png" alt="image-20211106150109596.png"></p><p><strong>大佬的串口转以太网设计:</strong></p><p><a href="https://oshwhub.com/jixin/CH9121-4c2c4f99e2494eee8421dd23768820a1">串口转以太网模块-CH9121 - 立创EDA开源硬件平台 (oshwhub.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CAN&quot;&gt;&lt;a href=&quot;#CAN&quot; class=&quot;headerlink&quot; title=&quot;CAN:&quot;&gt;&lt;/a&gt;CAN:&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/06/Cs8JxWr3kPG7efT.png&quot; alt</summary>
      
    
    
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/categories/sch/"/>
    
    
    <category term="sch" scheme="https://peitianyu.github.io/blog/tags/sch/"/>
    
  </entry>
  
  <entry>
    <title>hector基础使用</title>
    <link href="https://peitianyu.github.io/blog/2021/11/05/hector%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
    <id>https://peitianyu.github.io/blog/2021/11/05/hector%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</id>
    <published>2021-11-05T04:30:12.000Z</published>
    <updated>2021-11-05T06:14:45.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/weixin_41459903/article/details/102795148">思岚A1激光雷达hector_mapping建图与定位_欧俊岑的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_44785456/article/details/116789296?ops_request_misc=%7B%22request_id%22:%22163453792216780255277807%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163453792216780255277807&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-116789296.pc_search_ecpm_flag&utm_term=r2000+hector&spm=1018.2226.3001.4187">tx2+r2000激光雷达 hector建图_大家安静啊的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_36170626/article/details/98316545?ops_request_misc=%7B%22request_id%22:%22163454144916780262550313%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163454144916780262550313&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-98316545.pc_search_ecpm_flag&utm_term=hector_slam%E9%85%8D%E7%BD%AE&spm=1018.2226.3001.4187">hectorslam之EAI雷达(ydlidar_x2l)配置过程_sunshine-CSDN博客</a></p><p><a href="https://github.com/NickL77/RPLidar_Hector_SLAM">NickL77/RPLidar_Hector_SLAM: Hector SLAM without odometry data on ROS with the RPLidar A1 (github.com)</a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>hector是纯粹基于laserscan数据的算法,只需要提供scan数据即可,这里使用r2000做实验.因此第一步应该发布scan数据.</p><h1 id="Scan激光数据发布"><a href="#Scan激光数据发布" class="headerlink" title="Scan激光数据发布"></a>Scan激光数据发布</h1><p>r2000提供了ros发布的驱动文件,因此只需要修改些配置即可.</p><p>驱动网址:</p><p><a href="https://github.com/dillenberger/pepperl_fuchs">dillenberger/pepperl_fuchs: Pepperl+Fuchs R2000 Driver (github.com)</a></p><p>修改一下配置:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;pepperl_fuchs_r2000&quot;</span> <span class="attr">type</span>=<span class="string">&quot;r2000_node&quot;</span> <span class="attr">name</span>=<span class="string">&quot;r2000_driver_node&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scanner_ip&quot;</span> <span class="attr">value</span>=<span class="string">&quot;192.168.1.19&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;frame_id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;laser_link&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_frequency&quot;</span> <span class="attr">value</span>=<span class="string">&quot;35&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;samples_per_scan&quot;</span> <span class="attr">value</span>=<span class="string">&quot;3600&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;remap from=&quot;/r2000_driver_node/scan&quot; to=&quot;scan&quot;/&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--&lt;node pkg=&quot;dummy_slam_broadcaster&quot; type=&quot;dummy_slam_broadcaster_node&quot; name=&quot;dummy_slam_broadcaster&quot;/&gt;</span></span><br><span class="line"><span class="comment">  &lt;node name=&quot;rvizLocal&quot; pkg=&quot;rviz&quot; type=&quot;rviz&quot; respawn=&quot;false&quot; output=&quot;screen&quot; args=&quot;-d $(find pepperl_fuchs_r2000)/rviz/test.rviz&quot; required=&quot;true&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scanner_ip       r2000的配置激光ip地址</span><br><span class="line">frame_id         发布出去的框架id(用于tf转换)</span><br><span class="line">scan_frequency   扫描频率</span><br><span class="line">samples_per_scan 每圈的扫描数</span><br><span class="line"># 值得注意的是这里r2000发不出去的scan节点为/r2000_driver_node/scan</span><br><span class="line"># 可以通过remap重定义为/scan</span><br><span class="line">最后通过rviz显示</span><br></pre></td></tr></table></figure><p>ros执行命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch pepperl_fuchs_r2000 gui_example.launch</span><br></pre></td></tr></table></figure><h1 id="使用hector-mapping建图并定位"><a href="#使用hector-mapping建图并定位" class="headerlink" title="使用hector_mapping建图并定位"></a>使用hector_mapping建图并定位</h1><p>这里可以直接在系统中安装hector,并新建<code>hector_mapping.launch</code>文件,指令如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ros-melodic-hector-slam</span><br><span class="line">cd catkin_ws/src</span><br><span class="line">catkin_create_pkg run_launch # 因为内部都是launch文件并不需要依赖包</span><br><span class="line">cd run_launch &amp;&amp; sudo mkdir launch &amp;&amp; cd launch</span><br><span class="line">sudo nano hector_mapping.launch</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">launch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;hector_mapping&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hector_mapping&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hector_mapping&quot;</span> <span class="attr">output</span>=<span class="string">&quot;screen&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Frame names --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 确定map-&gt; odom转换是否应该由系统发布 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;pub_map_odom_transform&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 坐标系id,hector会将map与车体做tf连接到一块,而车体与激光之间的连接需要我们自己做 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;map&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;base_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;base_link&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 由于没有使用里程计,改为base_link即可 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;odom_frame&quot;</span> <span class="attr">value</span>=<span class="string">&quot;base_link&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Tf use --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;use_tf_scan_transformation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;use_tf_pose_start_estimate&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Map size / start point --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_resolution&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.05&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 地图尺寸需要注意一下,如果地图太小,可能导致激光范围过大,超出地图,这样匹配坐标会很挫 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_size&quot;</span> <span class="attr">value</span>=<span class="string">&quot;512&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_start_x&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_start_y&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;laser_z_min_value&quot;</span> <span class="attr">value</span> = <span class="string">&quot;-1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;laser_z_max_value&quot;</span> <span class="attr">value</span> = <span class="string">&quot;1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_multi_res_levels&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_pub_period&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;laser_min_dist&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 激光扫描距离要适中,如果太小也会出现建图建的很挫的现象 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;laser_max_dist&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5.5&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;output_timing&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 确定scanmatcher到map的转换是否发布到TF --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;pub_map_scanmatch_transform&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 发布的坐标名 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;param name=&quot;tf_map_scanmatch_transform_frame_name&quot; value=&quot;scanmatcher_frame&quot; /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Map update parameters --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;update_factor_free&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;update_factor_occupied&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.7&quot;</span> /&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_update_distance_thresh&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;map_update_angle_thresh&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.06&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Advertising config --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;advertise_map_service&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描订阅器的队列大小 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_subscriber_queue_size&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里更改一下scan_topic 如果我们做了重定向,需要改为/scan--&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;scan_topic&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/r2000_driver_node/scan&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">node</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- !注意:这一步需要将车体坐标系与激光坐标系进行tf转换连接起来 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;tf&quot;</span> <span class="attr">type</span>=<span class="string">&quot;static_transform_publisher&quot;</span> <span class="attr">name</span>=<span class="string">&quot;base_to_laser_broadcaster&quot;</span> <span class="attr">args</span>=<span class="string">&quot;0 0 0.105 0 0 0 /base_link /laser_link 100&quot;</span>/&gt;</span>_</span><br><span class="line"><span class="comment">&lt;!-- 这里使用的是hector自带的rviz配置,我们也可以在他的基础上增减功能,另存到我们自己的文件src/run_launch/rviz/map/hector_map.rviz --&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">node</span> <span class="attr">pkg</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">type</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rviz&quot;</span> <span class="attr">args</span>=<span class="string">&quot;-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">launch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>执行步骤:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 发布scan数据</span></span><br><span class="line">roslaunch pepperl_fuchs_r2000 gui_example.launch</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动hector_mapping</span></span><br><span class="line">roslaunch run_launch hector_mapping.launch</span><br></pre></td></tr></table></figure><h1 id="一些图片"><a href="#一些图片" class="headerlink" title="一些图片"></a>一些图片</h1><p><img src="https://img-blog.csdnimg.cn/20210514140914724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDc4NTQ1Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210514140924770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDc4NTQ1Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>1.订阅/scan不要出错</p><p>2.tf转换尤为需要注意,map-&gt;base_link-&gt;laser_link</p><p>3.激光距离与地图大小需要注意一下,这里设不好容易崩</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_41459903/article/detai</summary>
      
    
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/categories/slam/"/>
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>hector源码理解</title>
    <link href="https://peitianyu.github.io/blog/2021/11/05/hector%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    <id>https://peitianyu.github.io/blog/2021/11/05/hector%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</id>
    <published>2021-11-05T04:30:12.000Z</published>
    <updated>2021-11-06T07:29:40.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p>大佬的分析,包含代码注释解析与源码重写,论文翻译</p><p><a href="https://blog.csdn.net/qq_36355662/article/details/90349302">Hector_slam源码框架分析_翎风的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/cyberniklee/p/8484104.html">Hector SLAM解读（1）原文翻译 - cyberniklee - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/scomup/p/7075296.html">HectorSLAM论文解析・代码重写（2） - scomup - 博客园 (cnblogs.com)</a></p><p><a href="https://github.com/zhangwenxiao/HectorSlamWithoutROS">zhangwenxiao/HectorSlamWithoutROS: 脱离ROS的hector slam算法 (github.com)</a></p><h1 id="代码框架"><a href="#代码框架" class="headerlink" title="代码框架"></a>代码框架</h1><p>该开源系统的主要代码在hector_mapping文件夹中，文件夹里有src文件夹和include文件夹，包含了算法所有的核心代码。<br>通过对源码的梳理，整理出了如下流程图：</p><p><img src="https://img-blog.csdnimg.cn/20190520100840536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MzU1NjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>大佬的图非常清晰的可以看到,整个代码分为<code>地图匹配</code>与<code>地图更新</code></p><h1 id="地图匹配"><a href="#地图匹配" class="headerlink" title="地图匹配"></a>地图匹配</h1><p>主要采用<strong>非线性优化</strong>—-<strong>高斯牛顿法</strong>,实际上就是通过激光数据与现有地图的差距(双线性插补),通过最小二乘法,计算概率,从而更新位移增量,计算出机器人最可能存在位置</p><h2 id="双线性插值计算栅格概率"><a href="#双线性插值计算栅格概率" class="headerlink" title="双线性插值计算栅格概率"></a>双线性插值计算栅格概率</h2><p><a href="https://zhuanlan.zhihu.com/p/110754637">一篇文章为你讲透双线性插值 - 知乎 (zhihu.com)</a></p><p>通过双线性插补得到一个位置,然后通过最小二乘法,更新位移增量</p><h2 id="高斯牛顿法"><a href="#高斯牛顿法" class="headerlink" title="高斯牛顿法"></a>高斯牛顿法</h2><p><a href="https://blog.csdn.net/qq_42138662/article/details/109289129">高斯牛顿法详解_我只是一只自动小青蛙的博客-CSDN博客</a></p><p><a href="https://www.bilibili.com/video/BV1b441177kr?from=search&seid=5703864891923353812&spm_id_from=333.337.0.0">【泡泡机器人公开课】第三十课：非线性优化与g2o-高翔_哔哩哔哩_bilibili</a></p><h1 id="地图更新"><a href="#地图更新" class="headerlink" title="地图更新"></a>地图更新</h1><p>用bresenham<code>划线</code>算法计算激光途经栅格</p><p><a href="https://blog.csdn.net/yzh1994414/article/details/82860187">(60条消息) Bresenham 算法原理_yzh1994414的博客-CSDN博客_bresenham</a></p><p><a href="https://blog.csdn.net/datase/article/details/83620338">画线算法-Bresenham算法_天才樱木-CSDN博客_bresenham画线算法</a></p><h1 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h1><h4 id="1-优点"><a href="#1-优点" class="headerlink" title="1.优点"></a>1.优点</h4><p>（1）不需要使用里程计，可以用于地面不平坦区域及空中飞行器。<br>（2）使用多分辨率地图能避免局部最小值。</p><h4 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2.缺点"></a>2.缺点</h4><p>（1）要求雷达更新频率较高，测量噪声小；或者机器人运动速度低。<br>（2）无法利用精确的里程计信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;大佬的分析,包含代码注释解析与源码重写,论文翻译&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.n</summary>
      
    
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/categories/slam/"/>
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>map_server</title>
    <link href="https://peitianyu.github.io/blog/2021/11/05/map_server/"/>
    <id>https://peitianyu.github.io/blog/2021/11/05/map_server/</id>
    <published>2021-11-05T04:30:12.000Z</published>
    <updated>2021-11-05T07:26:41.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/datase/article/details/82495600">(60条消息) map server 功能和作用_天才樱木-CSDN博客_map_server</a></p><h1 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun map_server map_saver -f mymap</span><br></pre></td></tr></table></figure><p>我们会得到两个文件,<code>mymap.pgm</code>,<code>mymap.yaml</code></p><p><code>mymap.pgm</code>为0到1的灰度图</p><p><code>mymap.yaml</code>为配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 文件名</span></span><br><span class="line">image: testmap.png</span><br><span class="line"><span class="meta">#</span><span class="bash"> 分辨率</span></span><br><span class="line">resolution: 0.1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始点</span></span><br><span class="line">origin: [0.0, 0.0, 0.0]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 占用阈值</span></span><br><span class="line">occupied_thresh: 0.65</span><br><span class="line"><span class="meta">#</span><span class="bash"> 为自由阈值</span></span><br><span class="line">free_thresh: 0.196</span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否应该颠倒白/黑 自由/被占用的语义(阈值的解释不受影响)</span></span><br><span class="line">negate: 0</span><br></pre></td></tr></table></figure><h1 id="发布节点"><a href="#发布节点" class="headerlink" title="发布节点"></a>发布节点</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun map_server map_server mymap.yaml</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p><strong>map_metadata</strong> (<a href="http://docs.ros.org/api/nav_msgs/html/msg/MapMetaData.html">nav_msgs/MapMetaData</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这包含了关于占领网格特征的基本信息</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 地图加载的时间</span></span><br><span class="line">time map_load_time</span><br><span class="line"><span class="meta">#</span><span class="bash"> 地图的分辨率 [m/cell]</span></span><br><span class="line">float32 resolution</span><br><span class="line"><span class="meta">#</span><span class="bash"> Map width [cells]</span></span><br><span class="line">uint32 width</span><br><span class="line"><span class="meta">#</span><span class="bash"> Map height [cells]</span></span><br><span class="line">uint32 height</span><br><span class="line"><span class="meta">#</span><span class="bash"> 地图的原点[m, m, rad]。这是地图中单元格(0,0)的真实姿态。</span></span><br><span class="line">geometry_msgs/Pose origin</span><br></pre></td></tr></table></figure><p><strong>map</strong> (<a href="http://docs.ros.org/api/nav_msgs/html/msg/OccupancyGrid.html">nav_msgs/OccupancyGrid</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这代表了一个二维网格地图，其中每个单元格代表占用概率。</span></span><br><span class="line"></span><br><span class="line">Header header </span><br><span class="line"><span class="meta">#</span><span class="bash"> uint32 seq</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> time stamp</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> string frame_id</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">地图的元数据</span></span><br><span class="line">MapMetaData info</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 映射数据，按行主顺序，从(0,0)开始。占用概率在[0,100]范围内。未知是1。</span></span><br><span class="line">int8[] data</span><br></pre></td></tr></table></figure><p><strong>static_map</strong> (<a href="http://docs.ros.org/api/nav_msgs/html/srv/GetMap.html">nav_msgs/GetMap</a>)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Get the map as a nav_msgs/OccupancyGrid</span></span><br><span class="line">---</span><br><span class="line">nav_msgs/OccupancyGrid map</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/datase/article/details/824956</summary>
      
    
    
    
    <category term="ros" scheme="https://peitianyu.github.io/blog/categories/ros/"/>
    
    
    <category term="ros" scheme="https://peitianyu.github.io/blog/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>梯度下降法</title>
    <link href="https://peitianyu.github.io/blog/2021/11/05/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/"/>
    <id>https://peitianyu.github.io/blog/2021/11/05/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/</id>
    <published>2021-11-05T04:30:12.000Z</published>
    <updated>2021-11-05T12:21:42.907Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/qq_42138662/article/details/109289129">(60条消息) 高斯牛顿法详解_我只是一只自动小青蛙的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/lusongno1/article/details/80558684">信赖域狗腿（dogleg）方法_LSEC小陆的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_30463341/article/details/94809554?ops_request_misc=%7B%22request_id%22:%22163611474316780357221244%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163611474316780357221244&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-94809554.pc_search_mgc_flag&utm_term=%E5%88%97%E6%96%87%E4%BC%AF%E6%A0%BC-%E9%A9%AC%E5%A4%B8%E5%B0%94%E7%89%B9%E7%AE%97%E6%B3%95%E6%B5%81%E7%A8%8B&spm=1018.2226.3001.4187">高斯牛顿(Gauss Newton)、列文伯格-马夸尔特(Levenberg-Marquardt)最优化算法与VSLAM_weixin_30463341的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/a6333230/article/details/83304098">LM算法——列文伯格-马夸尔特算法（最速下降法，牛顿法，高斯牛顿法）（完美解释负梯度方向）_三眼二郎-CSDN博客_lm算法</a></p><h1 id="从上倒下为梯度下降法的前世今生已经未来的演化："><a href="#从上倒下为梯度下降法的前世今生已经未来的演化：" class="headerlink" title="从上倒下为梯度下降法的前世今生已经未来的演化："></a>从上倒下为梯度下降法的前世今生已经未来的演化：</h1><p><strong>最速下降法（一阶梯度法）</strong><br><strong>牛顿法（二阶梯度法）</strong><br><strong>高斯牛顿法</strong><br><strong>列文伯格法</strong><br><strong>马夸尔特法</strong></p><p>梯度下降主要用于slam中的非线性优化,实际上就是对一个最小二乘问题的求解,这也是上述几种方法的用途.</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><img src="https://img-blog.csdnimg.cn/202010261811320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyMTM4NjYy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="最速下降-一阶梯度法"><a href="#最速下降-一阶梯度法" class="headerlink" title="最速下降(一阶梯度法)"></a>最速下降(一阶梯度法)</h1><p><strong>最速下降法</strong>（一阶梯度法）就是保留泰勒展开的一阶项用来近似非线性函数**F ( x )**，即：<br>$$<br>F(xk​+Δxk​)≈F(xk​)+J(xk​)TΔxk<br>$$</p><p>$$<br>Δxk​=−J(xk)<br>$$</p><p>**缺点:**由于仅保留一阶的雅可比矩阵,该方法过于贪心，容易走出锯齿线，反而增加迭代次数。</p><h1 id="牛顿法和阻尼牛顿法（二阶梯度法）"><a href="#牛顿法和阻尼牛顿法（二阶梯度法）" class="headerlink" title="牛顿法和阻尼牛顿法（二阶梯度法）"></a>牛顿法和阻尼牛顿法（二阶梯度法）</h1><p>$$<br>H(x<br>k<br>​<br> )Δx<br>k<br>​<br> =−J(x<br>k<br>​<br> )<br>$$</p><p>**牛顿法的缺点:**海塞矩阵H计算量太大</p><p><strong>阻尼牛顿法</strong>(可以看成是牛顿法与最速法的结合)</p><p>阻尼牛顿法就是在使用牛顿法获得增量方向后，进一步对最优步长进行搜索：</p><h1 id="高斯牛顿法-仅用于最小二乘"><a href="#高斯牛顿法-仅用于最小二乘" class="headerlink" title="高斯牛顿法(仅用于最小二乘)"></a>高斯牛顿法(仅用于最小二乘)</h1><h3 id="原理-不对优化目标函数进行泰勒展开，我们对优化目标函数中的一部分，即f-x-进行一阶泰勒展开"><a href="#原理-不对优化目标函数进行泰勒展开，我们对优化目标函数中的一部分，即f-x-进行一阶泰勒展开" class="headerlink" title="原理(不对优化目标函数进行泰勒展开，我们对优化目标函数中的一部分，即f(x)进行一阶泰勒展开)"></a>原理(不对优化目标函数进行泰勒展开，我们对优化目标函数中的一部分，即f(x)进行一阶泰勒展开)</h3><p><strong>增量方程:</strong><br>$$<br>H(x<br>k<br>​<br> )Δx<br>k<br>​<br> =g(x<br>k<br>​<br> )<br>$$<br><strong>算法流程:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.给定初始值X0</span><br><span class="line">2.对于第k次迭代,求出当前雅可比矩阵J与误差f(x)</span><br><span class="line">3.求解增量方程:H*deltaxk=g</span><br><span class="line">4.若的了他xk足够小,则停止,否则,xk+1 = xk + deltaxk</span><br></pre></td></tr></table></figure><p><strong>缺点:</strong></p><p>由于是通过雅各比矩阵做的JH(海瑟矩阵)的近似,因此会遇见奇异矩阵与病态矩阵,可能出现算法不收敛.</p><h1 id="L-M方法，阻尼牛顿法"><a href="#L-M方法，阻尼牛顿法" class="headerlink" title="L-M方法，阻尼牛顿法"></a>L-M方法，阻尼牛顿法</h1><p><strong>列文伯格-马夸尔特方法的思想</strong><br>针对高斯牛顿法的不足，L-M方法做了两点改进：</p><ul><li><p>在求解增量Δ xk 时，对其设置了信赖区域</p></li><li><p>在求得增量Δ xk对其近似效果进行了量化，并根据量化结果对信赖区域进行调整，</p><p>再从新计算增量Δ x k，直到近似效果量化结果达到阈值。</p></li></ul><p><strong>增量方程</strong><br>$$<br>(H+λD<br>T<br> D)Δx<br>k<br>​<br> =g(x<br>k<br>​<br> )<br>$$<br><strong>近似程度的量化</strong><br>$$<br>ρ=<br>(f(xk​+Δx k​)−f(x k​ ))/(J(x k​)TΔxk​)​<br>$$</p><ul><li>当ρ接近1时，近似效果好；</li><li>当ρ太小时，实际减小的值远小于近似函数减小的值，近似效果差，需要缩小近似范围μ</li><li>当ρ较大时，实际减小的值大于近似函数减小的值，近似效果差，需要增大近似范围μ </li></ul><p><strong>算法流程:</strong></p><p><img src="https://img-blog.csdn.net/20170712180312420?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1YmFvaHVhX2J1cHQ=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_42138662/article/details/1</summary>
      
    
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/categories/slam/"/>
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>树莓派入门</title>
    <link href="https://peitianyu.github.io/blog/2021/11/03/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8/"/>
    <id>https://peitianyu.github.io/blog/2021/11/03/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8/</id>
    <published>2021-11-03T04:30:12.000Z</published>
    <updated>2021-11-03T13:51:08.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树莓派入门"><a href="#树莓派入门" class="headerlink" title="树莓派入门"></a>树莓派入门</h2><h3 id="1、树莓派安装"><a href="#1、树莓派安装" class="headerlink" title="1、树莓派安装"></a>1、树莓派安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">教程网站：https://blog.csdn.net/bhniunan/article/details/104783321</span><br><span class="line">    https://blog.csdn.net/W17330937835/article/details/105351273?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161603417716780255273810%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161603417716780255273810&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-3-105351273.pc_search_result_no_baidu_js&amp;utm_term=%E6%A0%91%E8%8E%93%E6%B4%BE4b</span><br><span class="line"></span><br><span class="line">https://ubuntu-mate.org/</span><br><span class="line">noobs安装系统：https://blog.csdn.net/diandianxiyu_geek/article/details/78949393</span><br><span class="line"></span><br><span class="line">https://shumeipai.nxez.com/download</span><br><span class="line">https://make.quwj.com/member/2/bookmarks?category=36</span><br></pre></td></tr></table></figure><h3 id="2、汉化Raspbian操作系统"><a href="#2、汉化Raspbian操作系统" class="headerlink" title="2、汉化Raspbian操作系统"></a>2、汉化Raspbian操作系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/bhniunan/article/details/104842773</span><br><span class="line">中文输入法：https://blog.csdn.net/qq_33475105/article/details/113488707?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161605416616780261948746%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161605416616780261948746&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-113488707.pc_search_result_no_baidu_js&amp;utm_term=%E6%A0%91%E8%8E%93%E6%B4%BE4b%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95</span><br></pre></td></tr></table></figure><h3 id="3、树莓派gpio控制"><a href="#3、树莓派gpio控制" class="headerlink" title="3、树莓派gpio控制"></a>3、树莓派gpio控制</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://wiki.jikexueyuan.com/project/raspberry-pi/gpio.html</span><br></pre></td></tr></table></figure><h3 id="4、树莓派命令行连接wifi"><a href="#4、树莓派命令行连接wifi" class="headerlink" title="4、树莓派命令行连接wifi"></a>4、树莓派命令行连接wifi</h3><p><a href="https://blog.csdn.net/u010875635/article/details/70170145">https://blog.csdn.net/u010875635/article/details/70170145</a></p><h3 id="5、树莓派用rc-local设置开机启动"><a href="#5、树莓派用rc-local设置开机启动" class="headerlink" title="5、树莓派用rc.local设置开机启动"></a>5、树莓派用rc.local设置开机启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入etc/rc.local</span><br><span class="line">编辑需要打开的设置，直接编辑命令</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;树莓派入门&quot;&gt;&lt;a href=&quot;#树莓派入门&quot; class=&quot;headerlink&quot; title=&quot;树莓派入门&quot;&gt;&lt;/a&gt;树莓派入门&lt;/h2&gt;&lt;h3 id=&quot;1、树莓派安装&quot;&gt;&lt;a href=&quot;#1、树莓派安装&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>hexo模板</title>
    <link href="https://peitianyu.github.io/blog/2021/11/03/%E6%A8%A1%E6%9D%BF/"/>
    <id>https://peitianyu.github.io/blog/2021/11/03/%E6%A8%A1%E6%9D%BF/</id>
    <published>2021-11-03T04:30:12.000Z</published>
    <updated>2021-11-03T13:51:18.385Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;</summary>
      
    
    
    
    <category term="模板" scheme="https://peitianyu.github.io/blog/categories/%E6%A8%A1%E6%9D%BF/"/>
    
    
    <category term="模板" scheme="https://peitianyu.github.io/blog/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>ros_rosbag</title>
    <link href="https://peitianyu.github.io/blog/2021/11/02/rosbag/"/>
    <id>https://peitianyu.github.io/blog/2021/11/02/rosbag/</id>
    <published>2021-11-02T04:30:12.000Z</published>
    <updated>2021-11-02T05:47:29.407Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h2><p><a href="https://blog.csdn.net/qiqiqiqi0000/article/details/114767249?ops_request_misc=%7B%22request_id%22:%22163582490616780261970410%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163582490616780261970410&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-114767249.pc_search_ecpm_flag&utm_term=rosbag&spm=1018.2226.3001.4187">(59条消息) Rosbag详细操作_Sun的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/newbeixue/article/details/110082489?ops_request_misc=%7B%22request_id%22:%22163582694116780271519523%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163582694116780271519523&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-110082489.pc_search_ecpm_flag&utm_term=rosbag+play+--clock&spm=1018.2226.3001.4187">rosbag –clock_newbeixue的博客-CSDN博客</a></p><h2 id="Rosbag基础使用"><a href="#Rosbag基础使用" class="headerlink" title="Rosbag基础使用"></a>Rosbag基础使用</h2><h3 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 保存所有topic</span></span><br><span class="line">rosbag record -a</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只记录某些感兴趣的 topic</span></span><br><span class="line">rosbag record /topic_name1 /topic_name2 /topic_name3</span><br><span class="line"><span class="meta">#</span><span class="bash"> 指定生成数据包的名字，则用-O /-o 参数</span></span><br><span class="line">rosbag record -O filename.bag /topic_name1</span><br><span class="line"><span class="meta">#</span><span class="bash"> launch 文件中使用 rosbag record 命令</span></span><br><span class="line">&lt;node pkg=&quot;rosbag&quot; type=&quot;record&quot; name=&quot;bag_record&quot; args=&quot;/topic1 /topic2&quot;/&gt; </span><br></pre></td></tr></table></figure><h3 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息"></a>显示信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">rosbag info filename.bag</span><br><span class="line">rosbag info -y filename.bag</span><br><span class="line"><span class="meta">#</span><span class="bash"> 示例</span></span><br><span class="line">xiaohu@xiaohu:~/bagfiles$  rosbag info -y 1.bag</span><br><span class="line">path: 1.bag</span><br><span class="line">version: 2.0</span><br><span class="line">duration: 3.295966</span><br><span class="line">start: 1566653873.351150</span><br><span class="line">end: 1566653876.647117</span><br><span class="line">size: 8103</span><br><span class="line">messages: 20</span><br><span class="line">indexed: True</span><br><span class="line">compression: none</span><br><span class="line">types:</span><br><span class="line">    - type: geometry_msgs/Twist</span><br><span class="line">      md5: 9f195f881246fdfa2798d1d3eebca84a</span><br><span class="line">topics:</span><br><span class="line">    - topic: /turtle1/cmd_vel</span><br><span class="line">      type: geometry_msgs/Twist</span><br><span class="line">      messages: 20</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rosbag-play"><a href="#rosbag-play" class="headerlink" title="rosbag play"></a>rosbag play</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 简单播放</span></span><br><span class="line">rosbag play &lt;bagfile&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> -r 2 表示2倍速播放</span></span><br><span class="line">rosbag play -r 2 &lt;bagfile&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 循环播放</span></span><br><span class="line">rosbag play -l  &lt;bagfile&gt;  # -l== --loop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只播放一部分topic</span></span><br><span class="line">rosbag play &lt;bagfile&gt; --topic /topic1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始播放立刻暂停，按空格继续</span></span><br><span class="line">rosbag play --pause record.bag</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="rosbag-–clock"><a href="#rosbag-–clock" class="headerlink" title="rosbag –clock"></a>rosbag –clock</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rosbag play --clock recorded1.bag</span><br><span class="line"><span class="meta">#</span><span class="bash"> -k， --keep-alive</span></span><br><span class="line">rosbag play -k  --clock recorded1.bag</span><br><span class="line"><span class="meta">#</span><span class="bash"> -r FACTOR, --rate=FACTOR</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将发布频率降低为原来的10%，留给滤波节点足够的时间进行处理。</span></span><br><span class="line">rosbag play -r 0.1 --clock recorded1.bag</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rosparam set /use_sim_time true</span><br><span class="line">rosbag play --pause  --clock -k scan_odom.bag --topic /topic1</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qiqiqiqi0000/article/details/</summary>
      
    
    
    
    <category term="ros" scheme="https://peitianyu.github.io/blog/categories/ros/"/>
    
    
    <category term="ros" scheme="https://peitianyu.github.io/blog/tags/ros/"/>
    
  </entry>
  
  <entry>
    <title>三维空间内旋转</title>
    <link href="https://peitianyu.github.io/blog/2021/11/02/%E4%B8%89%E7%BB%B4%E7%A9%BA%E9%97%B4%E5%86%85%E6%97%8B%E8%BD%AC/"/>
    <id>https://peitianyu.github.io/blog/2021/11/02/%E4%B8%89%E7%BB%B4%E7%A9%BA%E9%97%B4%E5%86%85%E6%97%8B%E8%BD%AC/</id>
    <published>2021-11-02T04:30:12.000Z</published>
    <updated>2021-11-02T13:07:47.696Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://blog.csdn.net/ahelloyou/article/details/108903506?ops_request_misc=%7B%22request_id%22:%22163585328716780271555754%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163585328716780271555754&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-108903506.pc_search_mgc_flag&utm_term=%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5&spm=1018.2226.3001.4187">旋转矩阵_ahelloyou的博客-CSDN博客_旋转矩阵</a></p><p><a href="https://blog.csdn.net/u012424737/article/details/106269229?ops_request_misc=%7B%22request_id%22:%22163585328716780271555754%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163585328716780271555754&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-2-106269229.pc_search_mgc_flag&utm_term=%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5&spm=1018.2226.3001.4187">机器人运动学基础——旋转矩阵_太初有泪的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/hongbin_xu/article/details/78929006?ops_request_misc=%7B%22request_id%22:%22163585334816780366567178%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163585334816780366567178&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-78929006.pc_search_mgc_flag&utm_term=%E6%97%8B%E8%BD%AC%E5%90%91%E9%87%8F&spm=1018.2226.3001.4187">三维重建学习(1)：基础知识：旋转矩阵与旋转向量_hongbin_xu的博客-CSDN博客_旋转向量</a></p><h1 id="简记"><a href="#简记" class="headerlink" title="简记"></a>简记</h1><p><img src="https://i.loli.net/2021/11/02/dxrQGvqahi5YN2I.jpg" alt="三位空间内的旋转"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/ahelloyou/article/details/108</summary>
      
    
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/categories/slam/"/>
    
    
    <category term="slam" scheme="https://peitianyu.github.io/blog/tags/slam/"/>
    
  </entry>
  
  <entry>
    <title>RTOS多任务访问同一个UART的操作方法</title>
    <link href="https://peitianyu.github.io/blog/2021/11/01/RTOS%E5%A4%9A%E4%BB%BB%E5%8A%A1%E8%AE%BF%E9%97%AE%E5%90%8C%E4%B8%80%E4%B8%AAUART%E7%9A%84%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95/"/>
    <id>https://peitianyu.github.io/blog/2021/11/01/RTOS%E5%A4%9A%E4%BB%BB%E5%8A%A1%E8%AE%BF%E9%97%AE%E5%90%8C%E4%B8%80%E4%B8%AAUART%E7%9A%84%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95/</id>
    <published>2021-11-01T04:30:12.000Z</published>
    <updated>2021-11-04T00:46:00.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h3><p><a href="https://mp.weixin.qq.com/s/4wWhF-Pm0vC8O0Qt5eiN-Q">RTOS多任务访问同一个UART的操作方法</a></p><p>在RTOS多任务编程的时候，同一个硬件（比如UART、I2C等）被多个任务访问的情况比较多，如果不合理处理，就会导致“混乱”的局面。</p><p>处理“混乱”局面的方法比较多，下面基于<strong>FreeRTOS</strong>，以UART为例讲讲常见的<em><strong>互斥</strong></em>、<em><strong>队列</strong></em>这两种方法。</p><h3 id="互斥访问方法"><a href="#互斥访问方法" class="headerlink" title="互斥访问方法"></a><strong>互斥访问方法</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建互斥量资源</span></span><br><span class="line">SemaphoreHandle_t xSemaphore = <span class="literal">NULL</span>;</span><br><span class="line">xSemaphore = xSemaphoreCreateMutex();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TaskA</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//占用资源</span></span><br><span class="line">    <span class="keyword">if</span>(xSemaphoreTake(xSemaphore, <span class="number">10</span> ) == pdTRUE)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//使用资源(发送数据)</span></span><br><span class="line">      USART_SendNByte();</span><br><span class="line">      <span class="comment">//释放资源</span></span><br><span class="line">      xSemaphoreGive(xSemaphore);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>信号量与互斥量区别</strong>：</p><p><strong>信号量</strong>：多个任务同步使用某个资源；</p><p>一个任务完成某个动作后通过信号告诉别的任务，别的任务才可以执行某些动作；</p><p><strong>互斥量</strong>：多任务互斥使用某个资源；</p><p>一个任务占用某个资源，那么别的任务就无法访问，直到该任务离开，其他任务才可以访问该资源；</p><h3 id="队列操作方法"><a href="#队列操作方法" class="headerlink" title="队列操作方法"></a><strong>队列操作方法</strong></h3><p>队列操作方法就是FIFO，先入先出的原理。比如：<strong>任务A要使用UART发送一串数据，将其加入队列； 接着任务B也要使用UART发送一串数据</strong>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">QueueHandle_t xQueue;</span><br><span class="line">xQueue = xQueueCreate(QUEUE_LENGTH, QUEUE_ITEM_SIZE);</span><br><span class="line"></span><br><span class="line">xTaskCreate(UART_Send_Task, <span class="string">&quot;UART_Send&quot;</span>, STACK_SIZE, <span class="literal">NULL</span>, TASK_PRIORITY, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TaskA</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//任务相关操作</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入队列</span></span><br><span class="line">    xQueueSend(xQueue, &amp;TaskA_Buf, <span class="number">10</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TaskB</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//任务相关操作</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加入队列</span></span><br><span class="line">    xQueueSend(xQueue, &amp;TaskB_Buf, <span class="number">10</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UART_Send_Task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(;;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//循环读取队列BUF</span></span><br><span class="line">    <span class="keyword">if</span>(xQueueReceive(xQueue, &amp;Buf, <span class="number">10</span>) == pdTRUE)</span><br><span class="line">    &#123;</span><br><span class="line">      USART_SendNByte(&amp;Buf);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/4wWhF-Pm0vC8O0Qt5eiN-Q&quot;&gt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="cpp" scheme="https://peitianyu.github.io/blog/tags/cpp/"/>
    
    <category term="嵌入式" scheme="https://peitianyu.github.io/blog/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>C程序注意点</title>
    <link href="https://peitianyu.github.io/blog/2021/11/01/c%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E6%B3%A8%E6%84%8F/"/>
    <id>https://peitianyu.github.io/blog/2021/11/01/c%E8%AF%AD%E8%A8%80%E7%BC%96%E5%86%99%E6%B3%A8%E6%84%8F/</id>
    <published>2021-11-01T04:30:12.000Z</published>
    <updated>2021-11-01T09:08:52.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址:"></a>参考网址:</h1><p><a href="https://mp.weixin.qq.com/s/sgWvpKMqetU6l6th4SRJ9A">https://mp.weixin.qq.com/s/sgWvpKMqetU6l6th4SRJ9A</a></p><h3 id="意想不到的八进制"><a href="#意想不到的八进制" class="headerlink" title="意想不到的八进制"></a>意想不到的八进制</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// b为八进制</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">34</span>, b=<span class="number">034</span>; </span><br></pre></td></tr></table></figure><h3 id="指针加减运算"><a href="#指针加减运算" class="headerlink" title="指针加减运算"></a>指针加减运算</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">1</span>;  </span><br><span class="line"><span class="keyword">int</span> *p=(<span class="keyword">int</span> *)<span class="number">0x00001000</span>;  </span><br><span class="line">a=a+<span class="number">1</span>;  </span><br><span class="line">p=p+<span class="number">1</span>; </span><br><span class="line"><span class="comment">// 这里的p是指针,</span></span><br><span class="line"><span class="comment">// p+1实际上是按照公式p+1*sizeof(int)来计算的。</span></span><br></pre></td></tr></table></figure><p>比如RAM初始化零操作,如下,只有4字节空间被初始化为零</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> *pRAMaddr;         <span class="comment">//定义地址指针变量  </span></span><br><span class="line"><span class="comment">// pRAMaddr+=4代码其实使pRAMaddr偏移了4*sizeof(int)=16个字节</span></span><br><span class="line"><span class="keyword">for</span>(pRAMaddr=StartAddr;pRAMaddr&lt;EndAddr;pRAMaddr+=<span class="number">4</span>)  </span><br><span class="line">&#123;  </span><br><span class="line">     *pRAMaddr=<span class="number">0x00000000</span>;   <span class="comment">//指定RAM地址清零  </span></span><br><span class="line">    <span class="comment">// 这里清除了四个字节</span></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="关键字sizeof"><a href="#关键字sizeof" class="headerlink" title="关键字sizeof"></a>关键字sizeof</h3><p><strong>sizeof</strong>是一个关键字,需要注意的是,<strong>使用sizeof获取数组长度时，不要对指针应用sizeof操作符</strong>.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClearRAM</span><span class="params">(<span class="keyword">char</span> <span class="built_in">array</span>[])</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">int</span> i ;  </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(<span class="built_in">array</span>)/<span class="keyword">sizeof</span>(<span class="built_in">array</span>[<span class="number">0</span>]);i++) <span class="comment">//这里用法错误，array实际上是指针  </span></span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="built_in">array</span>[i]=<span class="number">0x00</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">char</span> Fle[<span class="number">20</span>];  </span><br><span class="line">      </span><br><span class="line">    ClearRAM(Fle);          <span class="comment">//只能清除数组Fle中的前四个元素  </span></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h3 id="结构体填充"><a href="#结构体填充" class="headerlink" title="结构体填充"></a>结构体填充</h3><p>结构体可能产生填充，因为对大多数处理器而言，访问按字或者半字对齐的数据速度更快，当定义结构体时，编译器为了性能优化，可能会将它们按照半字或字对齐，这样会带来填充问题。比如以下两个结构体：</p><p>第一个结构体：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span>  </span><br><span class="line">    <span class="keyword">char</span>  c；  </span><br><span class="line">    <span class="keyword">short</span> s；  </span><br><span class="line">    <span class="keyword">int</span>   x；  </span><br><span class="line">&#125;str_test1; </span><br></pre></td></tr></table></figure><p>第二个结构体：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span>  </span><br><span class="line">    <span class="keyword">char</span>  c；  </span><br><span class="line">    <span class="keyword">int</span>   x；  </span><br><span class="line">    <span class="keyword">short</span> s；      </span><br><span class="line">&#125;str_test2;</span><br></pre></td></tr></table></figure><p>这两个结构体元素都是相同的变量，只是元素换了下位置，那么这两个结构体变量占用的内存大小相同吗？</p><p>其实这两个结构体变量占用的内存是不同的，对于Keil MDK编译器，默认情况下<strong>第一个结构体变量占用8个字节</strong>，<strong>第二个结构体占用12个字节</strong>，差别很大。第一个结构体变量在内存中的存储格式如图所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1~4字节  cc填充SSSS</span><br><span class="line">5~8字节  XXXXXXXX</span><br></pre></td></tr></table></figure><p>第二个结构体变量在内存中的存储格式如图所示。对比两个图可以看出MDK编译器是是怎么将数据对齐的，这其中的填充内容是之前内存中的数据，是随机的，所以不能再结构之间逐字节比较；另外，合理的排布结构体内的元素位置，可以最大限度减少填充，节省RAM。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1~4字节   cc填充</span><br><span class="line">5~8字节   XXXXXXXX</span><br><span class="line">9~12字节  ssss填充</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;参考网址&quot;&gt;&lt;a href=&quot;#参考网址&quot; class=&quot;headerlink&quot; title=&quot;参考网址:&quot;&gt;&lt;/a&gt;参考网址:&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/sgWvpKMqetU6l6th4SRJ9A&quot;&gt;</summary>
      
    
    
    
    <category term="cpp" scheme="https://peitianyu.github.io/blog/categories/cpp/"/>
    
    
    <category term="cpp" scheme="https://peitianyu.github.io/blog/tags/cpp/"/>
    
  </entry>
  
</feed>
